<?xml version="1.0" encoding="utf-8"?>
<ledger xmlns:ant="karaqu.com" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">

	<!-- app cache -->
	<applications/>
	
	<!-- svg icons -->
	<svg width="0" height="0"><svg id="karaqu-logo" viewBox="0 0 113 113"><style type="text/css">.st0{fill:url(#SVGID_1_);filter:url(#inset-shadow);}.st1{fill:url(#SVGID_2_);filter:url(#inset-shadow);}.st2{fill:url(#SVGID_3_);filter:url(#inset-shadow2);}</style><linearGradient id="SVGID_1_" gradientUnits="userSpaceOnUse" x1="8.318068e-02" y1="113.0476" x2="8.318068e-02" y2="112.8191" gradientTransform="matrix(478.8025 0 0 -460.1 16.5987 52017.1953)"><stop offset="0" style="stop-color:#CCCCCC"/><stop offset="1" style="stop-color:#AAAAAA"/></linearGradient><linearGradient id="SVGID_3_" gradientUnits="userSpaceOnUse" x1="5.634131e-02" y1="113.1118" x2="5.634131e-02" y2="112.8834" gradientTransform="matrix(449.8073 0 0 -413.8 31.0792 46816.8984)"><stop offset="0" style="stop-color:#EDEDED"/><stop offset="1" style="stop-color:#DADADA"/></linearGradient><linearGradient id="SVGID_2_" gradientUnits="userSpaceOnUse" x1="-0.3963" y1="113.4716" x2="-0.3963" y2="113.2432" gradientTransform="matrix(222.7011 0 0 -213.4879 144.686 24252.1445)"><stop offset="0" style="stop-color:#D1D1D1"/><stop offset="1" style="stop-color:#B5B5B5"/></linearGradient><filter id="inset-shadow"><feComponentTransfer in="SourceAlpha"><feFuncA type="table" tableValues="1 0"/></feComponentTransfer><feGaussianBlur stdDeviation="2"/><feOffset dx="0" dy="2" result="offsetblur"/><feFlood flood-color="#9b9b9b" result="color"/><feComposite in2="offsetblur" operator="in"/><feComposite in2="SourceAlpha" operator="in"/><feMerge><feMergeNode in="SourceGraphic"/><feMergeNode /></feMerge></filter><filter id="inset-shadow2"><feComponentTransfer in="SourceAlpha"><feFuncA type="table" tableValues="1 0"/></feComponentTransfer><feGaussianBlur stdDeviation="0"/><feOffset dx="0" dy="1" result="offsetblur"/><feFlood flood-color="#f6f6f6" result="color"/><feComposite in2="offsetblur" operator="in"/><feComposite in2="SourceAlpha" operator="in"/><feMerge><feMergeNode in="SourceGraphic"/><feMergeNode /></feMerge></filter><path class="st0" d="M109.7,15.9c-2.4-4.2-9-7.2-20.1-9.3C80.6,4.9,68.9,4,56.7,4C44.5,4,32.7,4.9,23.5,6.6c-5,0.9-9.2,2.1-12.4,3.4 c-4,1.6-6.6,3.5-7.9,5.9c-1.4,2.4-1.7,5.6-1.1,10c0.5,3.5,1.6,7.8,3.4,12.7c3.2,9,8.4,19.9,14.6,30.7c6.1,10.5,12.7,20.1,18.6,27 c3.2,3.8,6.3,6.8,9,8.9c3.3,2.6,6.3,3.8,8.9,3.8c4.8,0,10.6-4.1,17.9-12.6c5.8-6.8,12.4-16.3,18.4-26.8c6.3-10.9,11.5-21.9,14.7-31 c1.8-5,2.9-9.3,3.4-12.9C111.4,21.6,111.1,18.3,109.7,15.9z M106,32.4c-2.2-1.3-5.5-0.7-6.8,1.5v0C95.1,50.7,78,80.4,65.5,92.3l0,0 c-1.3,2.2-0.2,5.3,2.1,6.6c-4.3,4.3-8.2,6.9-11.2,6.9c-2.9,0-6.9-2.7-11.2-7v0c2.2-1.3,3.4-4.4,2.1-6.6l0,0 c-12.5-12-29.6-41.6-33.7-58.4v0c-1.3-2.2-4.5-2.8-6.8-1.5h0C4.9,25.6,4.4,20.3,6,17.6c1.5-2.6,5.9-4.7,12.1-6.4l0,0.1 c0,2.6,2.1,5.1,4.7,5.1c16.7-4.8,50.9-4.9,67.4,0l0,0c2.6,0,4.7-2.5,4.7-5.1l0.1-0.1c6,1.6,10.3,3.7,11.9,6.4 C108.4,20.3,108,25.7,106,32.4z"/><path class="st1" d="M31.5,32.4c-3.9,6.8,17.2,43.7,24.9,43.7c8,0,28.9-36.9,25-43.7C77.4,25.6,35.3,25.7,31.5,32.4z"/><path class="st2" d="M106.8,17.6c-1.5-2.6-5.8-4.7-11.9-6.4l-0.1,0.1c0,2.6-2.1,5.1-4.7,5.1c-16.6-4.9-50.8-4.8-67.4,0 c-2.6,0-4.7-2.5-4.7-5.1l0-0.1C11.9,12.8,7.5,14.9,6,17.6c-1.6,2.8-1.1,8,0.8,14.6h0c2.2-1.3,5.5-0.7,6.8,1.5v0 c4.1,16.8,21.2,46.4,33.7,58.4c1.3,2.3,0.2,5.3-2.1,6.6v0c4.4,4.4,8.3,7,11.2,7c3,0,6.9-2.6,11.2-6.9c-2.2-1.3-3.3-4.4-2.1-6.6 C78,80.4,95.1,50.7,99.3,33.9v0c1.3-2.2,4.5-2.8,6.8-1.5C108,25.7,108.4,20.3,106.8,17.6z M56.4,76.1c-7.8,0-28.9-36.9-24.9-43.7 c3.8-6.7,46-6.8,49.9,0C85.3,39.2,64.4,76.1,56.4,76.1z"/></svg><svg id="wp-karaqu-logo" viewBox="0 0 550 152"> <style type="text/css"> .st1{opacity:0.5;fill:#ffffff30;stroke:#ffffff88;stroke-width:0.75;} .st2{fill:none;stroke:url(#SVGID_2_);stroke-width:0.75;} .st3{fill:none;stroke:url(#SVGID_3_);stroke-width:0.75;} .st4{fill:none;stroke:url(#SVGID_4_);stroke-width:0.75;} .st5{fill:none;stroke:url(#SVGID_5_);stroke-width:0.75;} .st6{fill:none;stroke:url(#SVGID_6_);stroke-width:0.75;} .st7{fill:none;stroke:url(#SVGID_7_);stroke-width:0.75;} .st8{fill:none;stroke:url(#SVGID_8_);stroke-width:0.75;} .st9{fill:none;stroke:url(#SVGID_9_);stroke-width:0.75;} .st10{fill:none;stroke:url(#SVGID_10_);stroke-width:0.75;} .st11{fill:none;stroke:url(#SVGID_11_);stroke-width:0.75;} .st12{fill:none;stroke:url(#SVGID_12_);stroke-width:0.75;} .st13{fill:none;stroke:url(#SVGID_13_);stroke-width:0.75;} .st14{fill:none;stroke:url(#SVGID_14_);stroke-width:0.75;} .st15{fill:none;stroke:url(#SVGID_15_);stroke-width:0.75;} .st16{fill:none;stroke:url(#SVGID_16_);stroke-width:0.75;} .st17{fill:none;stroke:url(#SVGID_17_);stroke-width:0.75;} .st18{fill:none;stroke:url(#SVGID_18_);stroke-width:0.75;} .st19{fill:none;stroke:url(#SVGID_19_);stroke-width:0.75;} .st20{fill:none;stroke:url(#SVGID_20_);stroke-width:0.75;} .st21{fill:none;stroke:url(#SVGID_21_);stroke-width:0.75;} .st22{fill:none;stroke:url(#SVGID_22_);stroke-width:0.75;} .st23{fill:none;stroke:url(#SVGID_23_);stroke-width:0.75;} .st24{fill:none;stroke:url(#SVGID_24_);stroke-width:0.75;} .st25{fill:none;stroke:url(#SVGID_25_);stroke-width:0.75;} .st26{fill:none;stroke:url(#SVGID_26_);stroke-width:0.75;} .st27{fill:none;stroke:url(#SVGID_27_);stroke-width:0.75;} .st28{fill:none;stroke:url(#SVGID_28_);stroke-width:0.75;} .st29{fill:none;stroke:url(#SVGID_29_);stroke-width:0.75;} </style> <rect x="1.98" y="25.87" class="st1" width="15.1" height="99.66"/> <path class="st1" d="M22.91,79.69l32.17,45.88l18.44-0.01L38.56,75.74l35.03-49.92H55.14L22.81,71.91c-0.75,1.09-1.2,2.4-1.2,3.83 C21.62,77.22,22.11,78.58,22.91,79.69z"/> <circle class="st1" cx="161.01" cy="75.74" r="7.55"/> <circle class="st1" cx="339.19" cy="75.74" r="7.55"/> <circle class="st1" cx="409.32" cy="75.74" r="7.55"/> <path class="st1" d="M429.63,104.56c-0.28,0.27-0.45,0.65-0.45,1.08c0,0.42,0.17,0.8,0.45,1.08l23.48,23.5l10.68-10.68 l-14.29-14.29c6.27-8.5,9.66-18.74,9.66-29.5c0-27.48-22.35-49.83-49.83-49.83s-49.83,22.35-49.83,49.83s22.35,49.83,49.83,49.83 c4.65,0,9.27-0.64,13.71-1.91l2.53-0.73c0.54-0.19,0.92-0.68,0.92-1.28c0-0.39-0.16-0.74-0.42-0.99l-10.75-10.77 c-1.98,0.34-3.97,0.58-5.99,0.58c-19.15,0-34.73-15.58-34.73-34.73s15.58-34.73,34.73-34.73c19.15,0,34.73,15.58,34.73,34.73 c0,9.28-3.61,18-10.17,24.56L429.63,104.56z"/> <path class="st1" d="M509.45,125.57c-21.07,0-38.22-18.13-38.22-40.4V25.91h14.28v59.25c0,13.95,10.74,25.3,23.93,25.3 c13.2,0,23.93-11.35,23.93-25.3V25.91h14.28v59.25C547.66,107.44,530.52,125.57,509.45,125.57z"/> <path class="st1" d="M115.77,29.83l-37.65,95.74h16.22l28.07-71.46l28.07,71.45h16.22l-37.64-95.71c-1.27-2.39-3.76-4.03-6.66-4.03 C119.53,25.82,117.05,27.46,115.77,29.83z"/> <path class="st1" d="M293.95,29.88l-37.65,95.74h16.22l28.07-71.46l28.07,71.45h16.22L307.26,29.9c-1.27-2.39-3.76-4.03-6.66-4.03 C297.71,25.87,295.23,27.5,293.95,29.88z"/> <path class="st1" d="M208.5,68.1c6.92-0.61,12.35-6.44,12.35-13.52c0-7.48-6.09-13.57-13.57-13.57h-10.86v84.56h-15.1V25.91h25.96 c15.81,0,28.67,12.86,28.67,28.67c0,11.34-6.61,21.16-16.19,25.81l31.72,45.17h-18.47L202.23,81.7c-1.02-1.42-1.59-3.14-1.59-5.01 C200.64,72.19,204.11,68.5,208.5,68.1z"/>  <linearGradient id="SVGID_2_" gradientUnits="userSpaceOnUse" x1="1.979" y1="25.8657" x2="1.979" y2="-0.466"> <stop offset="0" style="stop-color:#fff;stop-opacity:0.25"/> <stop offset="0.9944" style="stop-color:#fff;stop-opacity:0"/> </linearGradient> <line class="st2" x1="1.98" y1="25.87" x2="1.98" y2="-0.47"/> <linearGradient id="SVGID_3_" gradientUnits="userSpaceOnUse" x1="17.0788" y1="25.8657" x2="17.0788" y2="-0.466"> <stop offset="0" style="stop-color:#fff;stop-opacity:0.25"/> <stop offset="0.9944" style="stop-color:#fff;stop-opacity:0"/> </linearGradient> <line class="st3" x1="17.08" y1="25.87" x2="17.08" y2="-0.47"/> <linearGradient id="SVGID_4_" gradientUnits="userSpaceOnUse" x1="1.979" y1="125.5244" x2="1.979" y2="151.856"> <stop offset="0" style="stop-color:#fff;stop-opacity:0.25"/> <stop offset="0.9944" style="stop-color:#fff;stop-opacity:0"/> </linearGradient> <line class="st4" x1="1.98" y1="151.86" x2="1.98" y2="125.52"/> <linearGradient id="SVGID_5_" gradientUnits="userSpaceOnUse" x1="17.0788" y1="125.5244" x2="17.0788" y2="151.856"> <stop offset="0" style="stop-color:#fff;stop-opacity:0.25"/> <stop offset="0.9944" style="stop-color:#fff;stop-opacity:0"/> </linearGradient> <line class="st5" x1="17.08" y1="151.86" x2="17.08" y2="125.52"/> <linearGradient id="SVGID_6_" gradientUnits="userSpaceOnUse" x1="62.9127" y1="26.0455" x2="62.9127" y2="3.1129"> <stop offset="0" style="stop-color:#fff;stop-opacity:0.25"/> <stop offset="0.9944" style="stop-color:#fff;stop-opacity:0"/> </linearGradient> <line class="st6" x1="55.1" y1="25.9" x2="70.72" y2="3.25"/> <linearGradient id="SVGID_7_" gradientUnits="userSpaceOnUse" x1="81.1668" y1="26.0455" x2="81.1668" y2="3.1129"> <stop offset="0" style="stop-color:#fff;stop-opacity:0.25"/> <stop offset="0.9944" style="stop-color:#fff;stop-opacity:0"/> </linearGradient> <line class="st7" x1="73.35" y1="25.9" x2="88.98" y2="3.25"/> <linearGradient id="SVGID_8_" gradientUnits="userSpaceOnUse" x1="62.9344" y1="125.3804" x2="62.9344" y2="147.9062"> <stop offset="0" style="stop-color:#fff;stop-opacity:0.25"/> <stop offset="0.9944" style="stop-color:#fff;stop-opacity:0"/> </linearGradient> <line class="st8" x1="70.77" y1="147.76" x2="55.1" y2="125.52"/> <linearGradient id="SVGID_9_" gradientUnits="userSpaceOnUse" x1="81.4232" y1="125.3804" x2="81.4232" y2="147.9062"> <stop offset="0" style="stop-color:#fff;stop-opacity:0.25"/> <stop offset="0.9944" style="stop-color:#fff;stop-opacity:0"/> </linearGradient> <line class="st9" x1="89.26" y1="147.76" x2="73.59" y2="125.52"/> <linearGradient id="SVGID_10_" gradientUnits="userSpaceOnUse" x1="74.2809" y1="125.4327" x2="74.2809" y2="145.1201"> <stop offset="0" style="stop-color:#fff;stop-opacity:0.25"/> <stop offset="0.9944" style="stop-color:#fff;stop-opacity:0"/> </linearGradient> <line class="st10" x1="70.44" y1="145.03" x2="78.13" y2="125.52"/> <linearGradient id="SVGID_11_" gradientUnits="userSpaceOnUse" x1="90.4376" y1="125.4327" x2="90.4376" y2="145.1201"> <stop offset="0" style="stop-color:#fff;stop-opacity:0.25"/> <stop offset="0.9944" style="stop-color:#fff;stop-opacity:0"/> </linearGradient> <line class="st11" x1="86.59" y1="145.03" x2="94.28" y2="125.52"/> <linearGradient id="SVGID_12_" gradientUnits="userSpaceOnUse" x1="154.3877" y1="125.4275" x2="154.3877" y2="145.1171"> <stop offset="0" style="stop-color:#fff;stop-opacity:0.25"/> <stop offset="0.9944" style="stop-color:#fff;stop-opacity:0"/> </linearGradient> <line class="st12" x1="158.28" y1="145.02" x2="150.49" y2="125.52"/> <linearGradient id="SVGID_13_" gradientUnits="userSpaceOnUse" x1="170.6156" y1="125.4275" x2="170.6156" y2="145.1171"> <stop offset="0" style="stop-color:#fff;stop-opacity:0.25"/> <stop offset="0.9944" style="stop-color:#fff;stop-opacity:0"/> </linearGradient> <line class="st13" x1="174.51" y1="145.02" x2="166.72" y2="125.52"/> <linearGradient id="SVGID_14_" gradientUnits="userSpaceOnUse" x1="181.313" y1="125.5203" x2="181.313" y2="145.0243"> <stop offset="0" style="stop-color:#fff;stop-opacity:0.25"/> <stop offset="0.9944" style="stop-color:#fff;stop-opacity:0"/> </linearGradient> <line class="st14" x1="181.31" y1="145.02" x2="181.31" y2="125.52"/> <linearGradient id="SVGID_15_" gradientUnits="userSpaceOnUse" x1="196.3595" y1="125.5203" x2="196.3595" y2="145.0243"> <stop offset="0" style="stop-color:#fff;stop-opacity:0.25"/> <stop offset="0.9944" style="stop-color:#fff;stop-opacity:0"/> </linearGradient> <line class="st15" x1="196.36" y1="145.02" x2="196.36" y2="125.52"/> <linearGradient id="SVGID_16_" gradientUnits="userSpaceOnUse" x1="239.0656" y1="125.3754" x2="239.0656" y2="142.3635"> <stop offset="0" style="stop-color:#fff;stop-opacity:0.25"/> <stop offset="0.9944" style="stop-color:#fff;stop-opacity:0"/> </linearGradient> <line class="st16" x1="245" y1="142.22" x2="233.13" y2="125.52"/> <linearGradient id="SVGID_17_" gradientUnits="userSpaceOnUse" x1="257.4198" y1="125.3754" x2="257.4198" y2="142.3635"> <stop offset="0" style="stop-color:#fff;stop-opacity:0.25"/> <stop offset="0.9944" style="stop-color:#fff;stop-opacity:0"/> </linearGradient> <line class="st17" x1="263.36" y1="142.22" x2="251.48" y2="125.52"/> <linearGradient id="SVGID_18_" gradientUnits="userSpaceOnUse" x1="253.0406" y1="125.5241" x2="253.0406" y2="142.3101"> <stop offset="0" style="stop-color:#fff;stop-opacity:0.25"/> <stop offset="0.9944" style="stop-color:#fff;stop-opacity:0"/> </linearGradient> <line class="st18" x1="249.78" y1="142.22" x2="256.31" y2="125.62"/> <linearGradient id="SVGID_19_" gradientUnits="userSpaceOnUse" x1="269.2729" y1="125.4764" x2="269.2729" y2="142.2625"> <stop offset="0" style="stop-color:#fff;stop-opacity:0.25"/> <stop offset="0.9944" style="stop-color:#fff;stop-opacity:0"/> </linearGradient> <line class="st19" x1="266.01" y1="142.17" x2="272.54" y2="125.57"/> <linearGradient id="SVGID_20_" gradientUnits="userSpaceOnUse" x1="332.6335" y1="125.5228" x2="332.6335" y2="145.2123"> <stop offset="0" style="stop-color:#fff;stop-opacity:0.25"/> <stop offset="0.9944" style="stop-color:#fff;stop-opacity:0"/> </linearGradient> <line class="st20" x1="336.53" y1="145.12" x2="328.74" y2="125.62"/> <linearGradient id="SVGID_21_" gradientUnits="userSpaceOnUse" x1="348.8613" y1="125.5228" x2="348.8613" y2="145.2123"> <stop offset="0" style="stop-color:#fff;stop-opacity:0.25"/> <stop offset="0.9944" style="stop-color:#fff;stop-opacity:0"/> </linearGradient> <line class="st21" x1="352.76" y1="145.12" x2="344.96" y2="125.62"/> <linearGradient id="SVGID_22_" gradientUnits="userSpaceOnUse" x1="460.4662" y1="130.0309" x2="460.4662" y2="145.1089"> <stop offset="0" style="stop-color:#fff;stop-opacity:0.25"/> <stop offset="0.9944" style="stop-color:#fff;stop-opacity:0"/> </linearGradient> <line class="st22" x1="467.82" y1="144.93" x2="453.11" y2="130.21"/> <linearGradient id="SVGID_23_" gradientUnits="userSpaceOnUse" x1="471.3517" y1="119.4001" x2="471.3517" y2="134.8673"> <stop offset="0" style="stop-color:#fff;stop-opacity:0.25"/> <stop offset="0.9944" style="stop-color:#fff;stop-opacity:0"/> </linearGradient> <line class="st23" x1="478.89" y1="134.69" x2="463.81" y2="119.58"/> <linearGradient id="SVGID_24_" gradientUnits="userSpaceOnUse" x1="396.5109" y1="73.5654" x2="396.5109" y2="73.5654"> <stop offset="0" style="stop-color:#fff;stop-opacity:0.25"/> <stop offset="0.9944" style="stop-color:#fff;stop-opacity:0"/> </linearGradient> <path class="st24" d="M396.51,73.57"/> <linearGradient id="SVGID_25_" gradientUnits="userSpaceOnUse" x1="429.6294" y1="106.7094" x2="429.6294" y2="106.7094"> <stop offset="0" style="stop-color:#fff;stop-opacity:0.25"/> <stop offset="0.9944" style="stop-color:#fff;stop-opacity:0"/> </linearGradient> <path class="st25" d="M429.63,106.71"/> <linearGradient id="SVGID_26_" gradientUnits="userSpaceOnUse" x1="471.1778" y1="25.8674" x2="471.1778" y2="2.0927"> <stop offset="0" style="stop-color:#fff;stop-opacity:0.25"/> <stop offset="0.9944" style="stop-color:#fff;stop-opacity:0"/> </linearGradient> <line class="st26" x1="471.24" y1="25.87" x2="471.12" y2="2.09"/> <linearGradient id="SVGID_27_" gradientUnits="userSpaceOnUse" x1="485.4343" y1="25.9048" x2="485.4343" y2="2.1302"> <stop offset="0" style="stop-color:#fff;stop-opacity:0.25"/> <stop offset="0.9944" style="stop-color:#fff;stop-opacity:0"/> </linearGradient> <line class="st27" x1="485.5" y1="25.9" x2="485.37" y2="2.13"/> <linearGradient id="SVGID_28_" gradientUnits="userSpaceOnUse" x1="533.3438" y1="25.8751" x2="533.3438" y2="2.1005"> <stop offset="0" style="stop-color:#fff;stop-opacity:0.25"/> <stop offset="0.9944" style="stop-color:#fff;stop-opacity:0"/> </linearGradient> <line class="st28" x1="533.4" y1="25.87" x2="533.28" y2="2.1"/> <linearGradient id="SVGID_29_" gradientUnits="userSpaceOnUse" x1="547.6003" y1="25.9126" x2="547.6003" y2="2.1379"> <stop offset="0" style="stop-color:#fff;stop-opacity:0.25"/> <stop offset="0.9944" style="stop-color:#fff;stop-opacity:0"/> </linearGradient> <line class="st29" x1="547.66" y1="25.91" x2="547.54" y2="2.14"/> </svg><svg id="icon-karaqu" viewBox="0 0 150 150"> <path fill="#000" d="M143.8,22.8c-3.1-5.4-11.6-9.3-26.1-12C106.1,8.6,91,7.4,75.2,7.4c-15.9,0-31.2,1.2-43,3.4c-6.5,1.2-11.9,2.6-16.1,4.4 c-5.1,2.1-8.5,4.6-10.2,7.6c-1.8,3.1-2.3,7.3-1.5,13C5,40.3,6.5,45.8,8.7,52.2C12.9,63.8,19.6,78,27.7,92c7.8,13.6,16.4,26,24,35 c4.2,4.9,8.1,8.8,11.6,11.5c4.3,3.3,8.1,5,11.5,5c6.2,0,13.8-5.3,23.2-16.3c7.6-8.8,16-21.1,23.8-34.7c8.1-14.1,14.9-28.3,19.1-40.1 c2.3-6.4,3.8-12,4.4-16.6C146.1,30.1,145.6,25.9,143.8,22.8z M136.4,45.5c-3.6-1.9-7.4-0.1-8.4,1.9c-6.2,22.6-24.5,55.1-41.8,72.5 c-1.6,2.8-0.2,6.6,2.5,8.2c-5.3,5.3-10.2,8.5-13.9,8.5c-3.6,0-8.5-3.3-13.9-8.7c1.5-0.9,4.6-4.3,2.6-8.2 c-17.1-16.2-38.7-57.2-41.8-72.5c-1.6-2.8-5.6-3.5-8.4-1.9c-1.6-4.8-3.5-14.6-1-18.2c2.7-4,10-6.2,15-7.8c0,3.2,2.6,6.5,5.8,6.5 c20.7-5.9,63.1-6.1,83.7,0l0,0c3.5,0,5.9-3.5,5.9-6.5c7.5,2,12.8,4.6,14.7,7.9C139.4,30.6,138.8,37.2,136.4,45.5z"/> <path fill="#000" d="M41.7,43.3c-5.2,9,22.8,58,33.1,58c10.6,0,38.3-49,33.1-58C102.8,34.3,46.8,34.5,41.7,43.3z"/> </svg><svg id="window-close" viewBox="0 0 8 8"> <path fill="#333" d="M7,1.9L6.1,1L4,3.1L1.9,1L1,1.9L3.1,4L1,6.1L1.9,7L4,4.9L6.1,7L7,6.1L4.9,4L7,1.9z"/> </svg><svg id="window-minimize" viewBox="0 0 8 8"> <rect fill="#333" x="1" y="3.5" class="st0" width="6" height="1.5"/> </svg><svg id="window-maximize" viewBox="0 0 8 8"> <path fill="#333" d="M7,5.2V1H2.9L7,5.2z"/> <path fill="#333" d="M1,2.9V7h4.1L1,2.9z"/> </svg><svg id="window-restore" viewBox="0 0 8 8"> <path fill="#333" d="M4,8V4H0L4,8z"/> <path fill="#333" d="M4,0v4h4L4,0z"/> </svg><svg id="icon-magnify" viewBox="0 0 13 13"> <path fill="#333" d="M11.8,10.3L9.3,7.9C9.7,7.2,10,6.4,10,5.5C10,3,8,1,5.5,1S1,3,1,5.5S3,10,5.5,10c0.9,0,1.7-0.3,2.4-0.7l2.5,2.5 c0.3,0.3,0.8,0.3,1.2,0l0.3-0.3C12.1,11.2,12.1,10.7,11.8,10.3z M2.8,5.5C2.8,4,4,2.8,5.5,2.8S8.2,4,8.2,5.5S7,8.2,5.5,8.2 S2.8,7,2.8,5.5z"/> </svg><svg id="icon-chevron-down" viewBox="0 0 8 8"> <polygon fill="#333" points="6.9,2.1 4,5 1.1,2.1 0,3 3,6 4,6.9 5,6 8,3 "/> </svg><svg id="icon-plus" viewBox="0 0 13 13"> <polygon fill="#333" points="11,6 7,6 7,2 6,2 6,6 2,6 2,7 6,7 6,11 7,11 7,7 11,7 "/> </svg><svg id="icon-chevron-sort" viewBox="0 0 13 13"> <polygon fill="#333" points="6.5,0.9 5.5,1.9 3.1,4.3 4.1,5.3 6.5,3 8.9,5.3 9.9,4.3 6.5,0.9 "/> <polygon fill="#333" points="6.5,12.1 7.5,11.1 9.9,8.7 8.9,7.7 6.5,10 4.1,7.7 3.1,8.7 6.5,12.1 "/> </svg><svg id="icon-heart" viewBox="0 0 13 13"> <path fill="#333" d="M12.9,4.4c0,1.7-1.6,3.1-1.6,3.2l-4.4,4.3C6.7,11.9,6.6,12,6.5,12s-0.2,0-0.3-0.1L1.7,7.6C1.7,7.5,0.1,6.1,0.1,4.4 C0.1,2.3,1.4,1,3.5,1c1.2,0,2.4,1,3,1.5C7.1,2,8.2,1,9.5,1C11.6,1,12.9,2.3,12.9,4.4z"/> </svg><svg id="icon-arrow-right" viewBox="0 0 10 10"> <polygon fill="#333" points="2,9 8,5 2,1 1,1 1,9"/> </svg><svg id="icon-check" viewBox="0 0 11 11"> <polygon fill="#333" points="9.5,1.5 4.4,6.6 1.5,3.7 0,5.1 2.9,8.1 4.4,9.5 11,2.9 "/> </svg><svg id="icon-volume-0" viewBox="0 0 16 16"> <path fill="#33333360" d="M12.9,14.5c-0.2,0-0.4-0.1-0.5-0.2c-0.3-0.3-0.3-0.8,0-1.1c1.4-1.4,2.2-3.2,2.2-5.2c0-2-0.8-3.8-2.2-5.2 C12,2.5,12,2,12.3,1.7c0.3-0.3,0.8-0.3,1.1,0C15.1,3.4,16,5.6,16,8s-0.9,4.6-2.6,6.3C13.2,14.4,13,14.5,12.9,14.5L12.9,14.5z"/> <path fill="#33333360" d="M10.1,13.1c-0.2,0-0.4-0.1-0.5-0.2c-0.3-0.3-0.3-0.8,0-1.1c2.1-2.1,2.1-5.5,0-7.6c-0.3-0.3-0.3-0.8,0-1.1 c0.3-0.3,0.8-0.3,1.1,0c1.3,1.3,2,3,2,4.9s-0.7,3.6-2,4.9C10.5,13,10.3,13.1,10.1,13.1L10.1,13.1L10.1,13.1z"/> <path fill="#33333360" d="M7.4,11.6c-0.2,0-0.4-0.1-0.5-0.2c-0.3-0.3-0.3-0.8,0-1.1C8.2,9,8.2,7,6.9,5.7c-0.3-0.3-0.3-0.8,0-1.1 c0.3-0.3,0.8-0.3,1.1,0c1.9,1.9,1.9,4.9,0,6.8C7.8,11.6,7.6,11.6,7.4,11.6z"/> <path fill="#333" d="M5.1,13.2c-0.1,0-0.2,0-0.3-0.1l-2.3-2.7H0.4C0.2,10.4,0,10.2,0,10V6c0-0.2,0.2-0.4,0.4-0.4h2.1l2.3-2.7 c0.1-0.1,0.3-0.1,0.4-0.1c0.2,0.1,0.2,0.2,0.2,0.4v9.6c0,0.2-0.1,0.3-0.2,0.4C5.2,13.2,5.1,13.2,5.1,13.2z"/> </svg><svg id="icon-volume-1" viewBox="0 0 16 16"> <path fill="#33333360" d="M12.9,14.5c-0.2,0-0.4-0.1-0.5-0.2c-0.3-0.3-0.3-0.8,0-1.1c1.4-1.4,2.2-3.2,2.2-5.2c0-2-0.8-3.8-2.2-5.2 C12,2.5,12,2,12.3,1.7c0.3-0.3,0.8-0.3,1.1,0C15.1,3.4,16,5.6,16,8s-0.9,4.6-2.6,6.3C13.2,14.4,13,14.5,12.9,14.5L12.9,14.5z"/> <path fill="#33333360" d="M10.1,13.1c-0.2,0-0.4-0.1-0.5-0.2c-0.3-0.3-0.3-0.8,0-1.1c2.1-2.1,2.1-5.5,0-7.6c-0.3-0.3-0.3-0.8,0-1.1 c0.3-0.3,0.8-0.3,1.1,0c1.3,1.3,2,3,2,4.9s-0.7,3.6-2,4.9C10.5,13,10.3,13.1,10.1,13.1L10.1,13.1L10.1,13.1z"/> <path fill="#333" d="M7.4,11.6c-0.2,0-0.4-0.1-0.5-0.2c-0.3-0.3-0.3-0.8,0-1.1C8.2,9,8.2,7,6.9,5.7c-0.3-0.3-0.3-0.8,0-1.1 c0.3-0.3,0.8-0.3,1.1,0c1.9,1.9,1.9,4.9,0,6.8C7.8,11.6,7.6,11.6,7.4,11.6z"/> <path fill="#333" d="M5.1,13.2c-0.1,0-0.2,0-0.3-0.1l-2.3-2.7H0.4C0.2,10.4,0,10.2,0,10V6c0-0.2,0.2-0.4,0.4-0.4h2.1l2.3-2.7 c0.1-0.1,0.3-0.1,0.4-0.1c0.2,0.1,0.2,0.2,0.2,0.4v9.6c0,0.2-0.1,0.3-0.2,0.4C5.2,13.2,5.1,13.2,5.1,13.2z"/> </svg><svg id="icon-volume-2" viewBox="0 0 16 16"> <path fill="#33333360" d="M12.9,14.5c-0.2,0-0.4-0.1-0.5-0.2c-0.3-0.3-0.3-0.8,0-1.1c1.4-1.4,2.2-3.2,2.2-5.2c0-2-0.8-3.8-2.2-5.2 C12,2.5,12,2,12.3,1.7c0.3-0.3,0.8-0.3,1.1,0C15.1,3.4,16,5.6,16,8s-0.9,4.6-2.6,6.3C13.2,14.4,13,14.5,12.9,14.5L12.9,14.5z"/> <path fill="#333" d="M10.1,13.1c-0.2,0-0.4-0.1-0.5-0.2c-0.3-0.3-0.3-0.8,0-1.1c2.1-2.1,2.1-5.5,0-7.6c-0.3-0.3-0.3-0.8,0-1.1 c0.3-0.3,0.8-0.3,1.1,0c1.3,1.3,2,3,2,4.9s-0.7,3.6-2,4.9C10.5,13,10.3,13.1,10.1,13.1L10.1,13.1L10.1,13.1z"/> <path fill="#333" d="M7.4,11.6c-0.2,0-0.4-0.1-0.5-0.2c-0.3-0.3-0.3-0.8,0-1.1C8.2,9,8.2,7,6.9,5.7c-0.3-0.3-0.3-0.8,0-1.1 c0.3-0.3,0.8-0.3,1.1,0c1.9,1.9,1.9,4.9,0,6.8C7.8,11.6,7.6,11.6,7.4,11.6z"/> <path fill="#333" d="M5.1,13.2c-0.1,0-0.2,0-0.3-0.1l-2.3-2.7H0.4C0.2,10.4,0,10.2,0,10V6c0-0.2,0.2-0.4,0.4-0.4h2.1l2.3-2.7 c0.1-0.1,0.3-0.1,0.4-0.1c0.2,0.1,0.2,0.2,0.2,0.4v9.6c0,0.2-0.1,0.3-0.2,0.4C5.2,13.2,5.1,13.2,5.1,13.2z"/> </svg><svg id="icon-volume-3" viewBox="0 0 16 16"> <path fill="#333" d="M12.9,14.5c-0.2,0-0.4-0.1-0.5-0.2c-0.3-0.3-0.3-0.8,0-1.1c1.4-1.4,2.2-3.2,2.2-5.2c0-2-0.8-3.8-2.2-5.2 C12,2.5,12,2,12.3,1.7c0.3-0.3,0.8-0.3,1.1,0C15.1,3.4,16,5.6,16,8s-0.9,4.6-2.6,6.3C13.2,14.4,13,14.5,12.9,14.5L12.9,14.5z"/> <path fill="#333" d="M10.1,13.1c-0.2,0-0.4-0.1-0.5-0.2c-0.3-0.3-0.3-0.8,0-1.1c2.1-2.1,2.1-5.5,0-7.6c-0.3-0.3-0.3-0.8,0-1.1 c0.3-0.3,0.8-0.3,1.1,0c1.3,1.3,2,3,2,4.9s-0.7,3.6-2,4.9C10.5,13,10.3,13.1,10.1,13.1L10.1,13.1L10.1,13.1z"/> <path fill="#333" d="M7.4,11.6c-0.2,0-0.4-0.1-0.5-0.2c-0.3-0.3-0.3-0.8,0-1.1C8.2,9,8.2,7,6.9,5.7c-0.3-0.3-0.3-0.8,0-1.1 c0.3-0.3,0.8-0.3,1.1,0c1.9,1.9,1.9,4.9,0,6.8C7.8,11.6,7.6,11.6,7.4,11.6z"/> <path fill="#333" d="M5.1,13.2c-0.1,0-0.2,0-0.3-0.1l-2.3-2.7H0.4C0.2,10.4,0,10.2,0,10V6c0-0.2,0.2-0.4,0.4-0.4h2.1l2.3-2.7 c0.1-0.1,0.3-0.1,0.4-0.1c0.2,0.1,0.2,0.2,0.2,0.4v9.6c0,0.2-0.1,0.3-0.2,0.4C5.2,13.2,5.1,13.2,5.1,13.2z"/> </svg><svg id="icon-clock" viewBox="0 0 96 96" cache="false"> <circle fill="none" stroke="#606060" stroke-width="9" cx="48" cy="48" r="39"/> <line style="transform-origin: 50% 50%; transform: rotate(var(--rotation-hour));" stroke="#4a4a4a" stroke-width="8" stroke-linecap="round" x1="48" y1="33" x2="48" y2="48"/> <line style="transform-origin: 50% 50%; transform: rotate(var(--rotation-minutes));" stroke="#4a4a4a" stroke-width="8" stroke-linecap="round" x1="48" y1="26" x2="48" y2="48"/> </svg><svg id="icon-color-preset" viewBox="0 0 17 17"> <style type="text/css"> .st0{fill:#fff;} .st1{fill:url(#SVGID_1_);} .st2{fill:url(#SVGID_2_);} .st3{fill:url(#SVGID_3_);} .st4{fill:url(#SVGID_4_);} .st5{fill:url(#SVGID_5_);} .st6{fill:url(#SVGID_6_);stroke:#000;stroke-width:0.25;} </style> <linearGradient id="SVGID_1_" gradientUnits="userSpaceOnUse" x1="182.5296" y1="177.924" x2="185.6278" y2="183.2903" gradientTransform="matrix(1.2821 0 0 -1.2821 -225.4985 236.577)"> <stop offset="0" style="stop-color:#fff;stop-opacity:0"/> <stop offset="1" style="stop-color:#FF0000;stop-opacity:0.7"/> </linearGradient> <linearGradient id="SVGID_2_" gradientUnits="userSpaceOnUse" x1="182.5475" y1="177.8933" x2="188.743" y2="177.8933" gradientTransform="matrix(1.2821 0 0 -1.2821 -225.4985 236.577)"> <stop offset="0" style="stop-color:#fff;stop-opacity:0"/> <stop offset="1" style="stop-color:#0000FF;stop-opacity:0.7"/> </linearGradient> <linearGradient id="SVGID_3_" gradientUnits="userSpaceOnUse" x1="182.5296" y1="177.8627" x2="185.6278" y2="172.4964" gradientTransform="matrix(1.2821 0 0 -1.2821 -225.4985 236.577)"> <stop offset="0" style="stop-color:#fff;stop-opacity:0"/> <stop offset="1" style="stop-color:#00AEEF;stop-opacity:0.7"/> </linearGradient> <linearGradient id="SVGID_4_" gradientUnits="userSpaceOnUse" x1="182.4945" y1="177.8632" x2="179.3963" y2="172.4969" gradientTransform="matrix(1.2821 0 0 -1.2821 -225.4985 236.577)"> <stop offset="0" style="stop-color:#fff;stop-opacity:0"/> <stop offset="1" style="stop-color:#00FF00;stop-opacity:0.7"/> </linearGradient> <linearGradient id="SVGID_5_" gradientUnits="userSpaceOnUse" x1="182.4773" y1="177.8933" x2="176.2818" y2="177.8933" gradientTransform="matrix(1.2821 0 0 -1.2821 -225.4985 236.577)"> <stop offset="0" style="stop-color:#fff;stop-opacity:0"/> <stop offset="1" style="stop-color:#FFFF00;stop-opacity:0.7"/> </linearGradient> <linearGradient id="SVGID_6_" gradientUnits="userSpaceOnUse" x1="182.4945" y1="177.9234" x2="179.3963" y2="183.2897" gradientTransform="matrix(1.2821 0 0 -1.2821 -225.4985 236.577)"> <stop offset="0" style="stop-color:#fff;stop-opacity:0"/> <stop offset="1" style="stop-color:#FF00FF;stop-opacity:0.7"/> </linearGradient> <circle class="st0" cx="8.5" cy="8.5" r="7.9"/> <circle class="st1" cx="8.5" cy="8.5" r="7.9"/> <circle class="st2" cx="8.5" cy="8.5" r="7.9"/> <circle class="st3" cx="8.5" cy="8.5" r="7.9"/> <circle class="st4" cx="8.5" cy="8.5" r="7.9"/> <circle class="st5" cx="8.5" cy="8.5" r="7.9"/> <circle class="st6" cx="8.5" cy="8.5" r="7.9"/> </svg><svg id="icon-view-icons" viewBox="0 0 13 13"> <style type="text/css"> .st0{fill:#666;} </style> <path class="st0" d="M5,1H2H1v5h1h4V5V1H5z M2,5V2h3v3H2z"/> <path class="st0" d="M11,1H8H7v5h1h4V5V1H11z M8,5V2h3v3H8z"/> <path class="st0" d="M5,7H2H1v5h1h4v-1V7H5z M2,11V8h3v3H2z"/> <path class="st0" d="M11,7H8H7v5h1h4v-1V7H11z M8,11V8h3v3H8z"/> </svg><svg id="icon-view-list" viewBox="0 0 13 13"> <style type="text/css"> .st0{fill:#666;} </style> <rect x="1" y="1" class="st0" width="11" height="1"/> <rect x="1" y="4" class="st0" width="11" height="1"/> <rect x="1" y="7" class="st0" width="11" height="1"/> <rect x="1" y="10" class="st0" width="11" height="1"/> </svg><svg id="icon-view-columns" viewBox="0 0 13 13"> <style type="text/css"> .st0{fill:#666;} </style> <path class="st0" d="M12,1H1H0v11h1h12v-1V1H12z M1,11V2h11v9H1z"/> <rect x="4" y="2" class="st0" width="1" height="9"/> <rect x="8" y="2" class="st0" width="1" height="9"/> </svg><svg id="icon-view-flow" viewBox="0 0 13 13"> <style type="text/css"> .st0{fill:#666;} </style> <path class="st0" d="M12,2H1H0v6h1h12V7V2H12z M1,7V3h11v4H1z"/> <rect x="1" y="9" class="st0" width="2" height="2"/> <rect x="4" y="9" class="st0" width="2" height="2"/> <rect x="7" y="9" class="st0" width="2" height="2"/> <rect x="10" y="9" class="st0" width="2" height="2"/> </svg><svg id="sidebar-home" viewBox="0 0 38 38"> <style type="text/css"> .st0{fill:#DDDDEE;} .st1{fill:#433F50;} .st2{fill:#666666;} .st3{fill:#FAFAFF;} .st4{fill:#aab;} .st5{fill:#433F50;enable-background:new;} </style> <polygon class="st0" points="33.1,16.5 19,4.4 5,16.5 5,35 33.1,35 "/> <path class="st1" d="M34,35.8H4V16.2L19.1,3.5L34,16.1V35.8z M5.3,34.5h27.3V16.8L19,5.2L5.3,16.8V34.5z"/> <rect x="15.3" y="24" class="st2" width="7.5" height="11.2"/> <path class="st1" d="M23.4,35.7h-8.7V23.4h8.7V35.7z M15.9,34.5h6.4v-10h-6.4V34.5z"/> <rect x="20.6" y="28.4" class="st3" width="1.2" height="2.5"/> <rect x="16" y="13.8" class="st3" width="6.2" height="6.2"/> <path class="st1" d="M22.7,20.5h-7.4v-7.4h7.4V20.5z M16.5,19.4h5v-5h-5V19.4z"/> <polygon class="st2" points="30.9,14.8 27.1,11.4 27.1,4.6 30.9,4.6 "/> <path class="st1" d="M31.5,16.2l-5-4.5V4h5V16.2z M27.7,11.1l2.6,2.4V5.2h-2.6V11.1z"/> <rect x="16.5" y="17.4" class="st4" width="5" height="1.9"/> <polygon class="st5" points="3.1,21.1 0.3,18 19.1,1 37.7,18 34.9,21.1 19,6.6 "/> <rect x="2" y="34" class="st1" width="34" height="2"/> </svg><svg id="sidebar-desktop" viewBox="0 0 38 38"> <style type="text/css"> .st0{fill:#aab;} .st1{fill:#8881A3;stroke:#8881A3;stroke-miterlimit:10;} .st2{fill:#433F50;} .st3{fill:none;stroke:#433F50;stroke-miterlimit:10;} .st4{fill:#fff;} </style> <rect x="2" y="11" class="st0" width="34" height="22"/> <path class="st1" d="M29.5,33.5v-4.2c0-0.7-0.6-1.3-1.3-1.3H9.8c-0.7,0-1.3,0.6-1.3,1.3v4.2H29.5z"/> <rect x="2" y="10" class="st2" width="34" height="1"/> <path class="st3" d="M35.4,33.5H2.6c-0.6,0-1.1-0.5-1.1-1.1V5.6C1.5,5,2,4.5,2.6,4.5h32.8c0.6,0,1.1,0.5,1.1,1.1v26.8 C36.5,33,36,33.5,35.4,33.5z"/> <circle class="st2" cx="4.5" cy="7.5" r="1.5"/> <rect x="10" y="29" class="st4" width="4" height="4"/> <rect x="17" y="29" class="st4" width="4" height="4"/> <rect x="24" y="29" class="st4" width="4" height="4"/> </svg><svg id="sidebar-network" viewBox="0 0 38 38"> <style type="text/css"> .st0{opacity:0.45;fill:#433F50;enable-background:new;} .st1{fill:none;stroke:#433F50;stroke-width:1.5;stroke-miterlimit:10;} </style> <path class="st0" d="M3.2,20c2,1.9,4.2,3.6,6.6,5c-0.1-0.6-0.1-1.2-0.1-1.8c0-2.1,0.1-4.2,0.4-6.3C7.7,17.7,5.4,18.7,3.2,20z"/> <path class="st0" d="M11.2,25.8c1.7,0.9,3.6,1.6,5.4,2.2l0.4,0.1c0.4-0.7,1.1-1.2,1.9-1.2h0.5c1.8-3.1,2.9-6.6,3.2-10.2 c-0.7-0.3-1.2-0.8-1.4-1.6c-3.3,0-6.5,0.4-9.7,1.3C11,19.5,10.9,22.7,11.2,25.8z"/> <path class="st0" d="M10.4,15.4c0.3-1.4,0.7-2.8,1.1-4.2l0.3-0.7c-0.5-0.4-0.8-1-0.8-1.6C9.4,8.4,7.8,8.1,6.2,7.8 c-2.7,3-4.1,6.9-4.2,11L2.2,19C4.8,17.5,7.5,16.3,10.4,15.4z"/> <path class="st0" d="M13.1,11L13.1,11l-0.3,0.6c-0.4,1.1-0.7,2.3-0.9,3.4c3-0.8,6.1-1.1,9.1-1.1c-2-1.4-4.1-2.6-6.3-3.6 C14.3,10.8,13.7,11,13.1,11z"/> <path class="st0" d="M9.9,26.6c-1.6-0.8-3.1-1.8-4.5-2.8c-1.2-0.9-2.3-1.9-3.4-2.9c0.7,6,4.4,11.2,9.9,13.7l-0.1-0.3 C10.9,31.8,10.3,29.2,9.9,26.6z"/> <path class="st0" d="M25.4,15.6l-0.1,0.2c1.8,1.7,3.4,3.5,4.7,5.6c1,1.5,1.8,3.1,2.5,4.7c0.3,0.7,0.6,1.5,0.8,2.2 c1.8-2.7,2.7-5.9,2.8-9.2C32.7,17.2,29.1,16,25.4,15.6z"/> <path class="st0" d="M20.7,30.4c-0.4,0.5-1,0.8-1.7,0.8l-0.7-0.1c-1.2,1.5-2.6,2.9-4.1,4.2c6.1,1.8,12.6,0,17-4.5 C30,30.9,28.6,31,27.3,31C25.1,31,22.9,30.8,20.7,30.4z"/> <path class="st0" d="M23.2,9.8c0.3,1,0.5,1.9,0.6,2.9c0.8,0.2,1.4,0.7,1.6,1.5c1.7,0.2,3.4,0.6,5,1.1c1.9,0.6,3.7,1.3,5.5,2.3 C35.2,8.8,27.9,2,19.1,2c0.5,0.6,1,1.2,1.4,1.9C21.7,5.7,22.6,7.7,23.2,9.8z"/> <path class="st0" d="M13.1,6.7h0.2c0.7-1.5,1.6-3,2.5-4.4c-3.2,0.6-6.1,2.1-8.4,4.4c1.4,0.3,2.7,0.6,4,1C11.7,7.1,12.4,6.7,13.1,6.7 z"/> <path class="st0" d="M15.2,8.8c0,0.1,0,0.1,0,0.2c2.4,1.1,4.8,2.4,6.9,4l0.3-0.2c-0.4-3-1.5-5.8-3.2-8.3c-0.6-0.8-1.2-1.7-1.9-2.4 c-1.1,1.6-2.1,3.3-3,5.1C14.9,7.6,15.2,8.2,15.2,8.8z"/> <path class="st0" d="M24.4,16.7L24,16.9C24,17.9,23.8,19,23.6,20c-0.3,1.7-0.9,3.3-1.6,4.9c-0.4,0.9-0.9,1.9-1.4,2.8 c0.3,0.4,0.5,0.9,0.5,1.4l0,0c2,0.4,4.1,0.6,6.2,0.6c1.6,0,3.2-0.1,4.8-0.3c-0.7-2.6-1.8-5-3.3-7.2C27.6,20.1,26.1,18.3,24.4,16.7z" /> <path class="st0" d="M17.2,30.3c-0.2-0.2-0.3-0.5-0.3-0.8l-0.6-0.2c-1.6-0.5-3.3-1.2-4.8-1.9c0.4,2.4,1,4.7,1.9,6.9 C14.8,33.1,16.1,31.7,17.2,30.3z"/> <circle class="st1" cx="19" cy="19" r="17.2"/> </svg><svg id="sidebar-shared" viewBox="0 0 38 38"> <style type="text/css"> .st0{fill:#433F50;} .st1{opacity:0.5;fill:#aab;enable-background:new;} .st2{fill:#aab;} .st3{opacity:0.7;fill:#433F50;} </style> <path class="st0" d="M34.6,5.1H17.9c-2.4,0-3.2-0.7-4-1.4C13.1,2.8,12.3,2,9.9,2H3.4C2.1,2,1,3.1,1,4.5V28c0,1.3,1.1,2.4,2.4,2.4 h31.2c1.3,0,2.4-1.1,2.4-2.4V11v-1V7.5C37,6.1,35.9,5.1,34.6,5.1z M36,28c0,0.8-0.6,1.4-1.4,1.4H3.4C2.6,29.4,2,28.7,2,28V11h34V28z  M2,10V4.5C2,3.7,2.6,3,3.4,3h6.5c1.9,0,2.6,0.6,3.3,1.3c0.9,0.8,1.9,1.7,4.7,1.7h16.7c0.8,0,1.4,0.6,1.4,1.4V10H2z"/> <path class="st1" d="M2,10V4.5C2,3.7,2.6,3,3.4,3h6.5c1.9,0,2.6,0.6,3.3,1.3c0.9,0.8,1.9,1.7,4.7,1.7h16.7c0.8,0,1.4,0.6,1.4,1.4V10 H2z"/> <path class="st2" d="M36,28c0,0.8-0.6,1.4-1.4,1.4H3.4C2.6,29.4,2,28.7,2,28V11h34V28z"/> <path class="st3" d="M36.3,34H24v-0.3c0-0.4-0.3-0.7-0.7-0.7H20v-2.6h-2V33h-3.3c-0.4,0-0.7,0.3-0.7,0.7V34H1.7 C1.3,34,1,34.3,1,34.7v0.7C1,35.7,1.3,36,1.7,36H14v0.3c0,0.4,0.3,0.7,0.7,0.7h8.7c0.4,0,0.7-0.3,0.7-0.7V36h12.3 c0.4,0,0.7-0.3,0.7-0.7v-0.7C37,34.3,36.7,34,36.3,34z"/> </svg><svg id="sidebar-applications" viewBox="0 0 38 38"> <style type="text/css"> .st0{fill:#aab;} .st1{fill:#433F50;} </style> <path class="st0" d="M30.3,19.3c0.3,0.5,0.4,0.9,0.3,1.4c0,0.1,0,0.1-0.1,0.2c0.5,0.1,1,0.4,1.3,0.9l1,1.7h4.1v-6.7h-8.1 C29.6,18.1,30.2,19.2,30.3,19.3z"/> <path class="st0" d="M26.3,23.4C26.3,23.4,26.3,23.4,26.3,23.4c-0.4-0.1-1-0.3-1.4-1.1c-0.2-0.3-1.6-2.8-3.3-5.6h-6.4l-3.9,6.7 L26.3,23.4L26.3,23.4z"/> <polygon class="st0" points="7.8,16.7 1,16.7 1,23.4 3.9,23.4 "/> <path class="st1" d="M16.4,5.8c-0.7-1.2,0-2.1,0.5-2.4c0.5-0.3,0.3-0.2,1.1-0.7c0.9-0.5,1.7,0.1,2.1,0.9c0.4,0.7,8.8,15.7,9.1,16.2 c0.3,0.5,0.3,0.9-0.2,1.1c-0.4,0.3-1.7,1-2.1,1.2c-0.4,0.3-0.9,0.3-1.3-0.4C25.2,21,16.4,5.8,16.4,5.8z"/> <path class="st1" d="M32.1,24.2c0.2,0.4,0.1,0.8-0.3,1l-2.3,1.4c-0.4,0.2-0.8,0.1-1-0.3l-1.1-2c-0.2-0.4-0.1-0.8,0.3-1l2.3-1.4 c0.4-0.2,0.8-0.1,1,0.3L32.1,24.2z"/> <path class="st1" d="M30.9,27.2c-0.5,0.3-1,0.6-1,1.7c0.1,1,0.8,2.6,1.7,2.9c1,0.4,2.5,1.1,2.6,2.2c0.1,1,0.2,2.5,1.1,0.3 c0.9-2.2,0.5-4.6-0.4-6.2c-0.9-1.5-1.9-1.8-2.5-1.6C31.7,26.7,30.9,27.2,30.9,27.2z"/> <rect x="0.5" y="18.5" transform="matrix(0.5 -0.866 0.866 0.5 -13.3332 18.2527)" class="st1" width="17.2" height="4.4"/> <path class="st1" d="M2.2,28.3l-0.8,1.4c-0.2,0.4-0.3,5.3-0.3,5.3s3.9-2.8,4.1-3.1L6,30.5L2.2,28.3z"/> <path class="st1" d="M16.1,13.1l1.5-2.7c0.2-0.4,0.1-0.8-0.3-1l-2.5-1.4c-0.4-0.2-0.8-0.1-1,0.3l-1.5,2.7L16.1,13.1z"/> </svg><svg id="sidebar-documents" viewBox="0 0 38 38"> <style type="text/css"> .st0{fill:#433F50;} .st1{fill:#FAFAFF;} .st2{opacity:0.2;fill:#433F50;enable-background:new;} .st3{opacity:0.5;fill:#433F50;enable-background:new;} </style> <path class="st0" d="M26,18.5L26,18.5C26,18.5,26,18.5,26,18.5c-0.1-3.3-0.5-3.8-5.1-8.4c-5-5-5.1-5.1-8.4-5.1L1,5v32h25V19.5 C26,19.1,26,18.8,26,18.5z M24.3,15.3c-0.5-0.2-1.1-0.3-1.8-0.3H16V8.5c0-0.7-0.1-1.4-0.4-1.9c0.9,0.6,2.2,1.8,4.5,4.2 C22.4,13.1,23.6,14.3,24.3,15.3z M25,36H2V6l10.5,0v0C14.2,6,15,6.8,15,8.5V16h7.5c1.7,0,2.5,0.8,2.5,2.5c0,0.3,0,0.6,0,1V36z"/> <path class="st1" d="M24.3,15.3c-0.5-0.2-1.1-0.3-1.8-0.3H16V8.5c0-0.7-0.1-1.4-0.4-1.9c0.9,0.6,2.2,1.8,4.5,4.2 C22.4,13.1,23.6,14.3,24.3,15.3z"/> <path class="st2" d="M25,36H2V6l10.5,0v0C14.2,6,15,6.8,15,8.5V16h7.5c1.7,0,2.5,0.8,2.5,2.5c0,0.3,0,0.6,0,1V36z"/> <path class="st0" d="M37,14.5L37,14.5C37,14.5,37,14.5,37,14.5c-0.1-3.3-0.5-3.8-5.1-8.4c-5-5-5.1-5.1-8.4-5.1L12,1v4l0,0l0.5,0 c0.2,0,0.3,0,0.5,0V2l10.5,0v0C25.2,2,26,2.8,26,4.5V12h7.5c1.7,0,2.5,0.8,2.5,2.5c0,0.3,0,0.6,0,1V32H26v1h11V15.5 C37,15.1,37,14.8,37,14.5z M33.5,11H27V4.5c0-0.7-0.1-1.4-0.4-1.9c0.9,0.6,2.2,1.8,4.5,4.2c2.3,2.3,3.5,3.5,4.1,4.5 C34.8,11.1,34.2,11,33.5,11z"/> <path class="st1" d="M35.3,11.3c-0.5-0.2-1.1-0.3-1.8-0.3H27V4.5c0-0.7-0.1-1.4-0.4-1.9c0.9,0.6,2.2,1.8,4.5,4.2 C33.4,9.1,34.6,10.3,35.3,11.3z"/> <path class="st3" d="M36,14.5c0-1.7-0.8-2.5-2.5-2.5H26V4.5C26,2.8,25.2,2,23.5,2v0L13,2v3v0c2.7,0,3.1,0.4,7.9,5.1 c4.6,4.6,5.1,5.1,5.1,8.3c0,0,0,0,0,0h0c0,0.3,0,0.6,0,1V32h10V15.5C36,15.1,36,14.8,36,14.5z"/> </svg><svg id="sidebar-folder" viewBox="0 0 38 38"> <style type="text/css"> .st0{fill:#433F50;} .st1{opacity:0.5;fill:#aab;enable-background:new;} .st2{fill:#aab;} </style> <path class="st0" d="M34.6,8.1H17.9c-2.4,0-3.2-0.7-4-1.4C13.1,5.8,12.3,5,9.9,5H3.4C2.1,5,1,6.1,1,7.5V31c0,1.3,1.1,2.4,2.4,2.4 h31.2c1.3,0,2.4-1.1,2.4-2.4V14v-1v-2.5C37,9.1,35.9,8.1,34.6,8.1z M36,31c0,0.8-0.6,1.4-1.4,1.4H3.4C2.6,32.4,2,31.7,2,31V14h34V31 z M2,13V7.5C2,6.7,2.6,6,3.4,6h6.5c1.9,0,2.6,0.6,3.3,1.3c0.9,0.8,1.9,1.7,4.7,1.7h16.7c0.8,0,1.4,0.6,1.4,1.4V13H2z"/> <path class="st1" d="M2,13V7.5C2,6.7,2.6,6,3.4,6h6.5c1.9,0,2.6,0.6,3.3,1.3c0.9,0.8,1.9,1.7,4.7,1.7h16.7c0.8,0,1.4,0.6,1.4,1.4V13 H2z"/> <path class="st2" d="M36,31c0,0.8-0.6,1.4-1.4,1.4H3.4C2.6,32.4,2,31.7,2,31V14h34V31z"/> </svg><svg id="sidebar-dropbox" viewBox="0 0 38 38"> <style type="text/css"> .st0{opacity:0.61;fill:#433F50;enable-background:new;} </style> <path class="st0" d="M8.3,15L19,21.6l-7.4,6.2L1,20.9L8.3,15z M29.6,27v2.3L19,35.7v0l0,0l0,0v0L8.4,29.3V27l3.2,2.1l7.4-6.1v0l0,0 l0,0v0l7.4,6.1L29.6,27z M11.6,2.3L19,8.5L8.3,15L1,9.2L11.6,2.3z M29.7,15l7.3,5.9l-10.6,6.9L19,21.6L29.7,15z M26.4,2.3L37,9.2 L29.7,15L19,8.5L26.4,2.3z"/> </svg><svg id="sidebar-pcloud" viewBox="0 0 38 38"> <style type="text/css"> .st0{opacity:0.61;fill-rule:evenodd;clip-rule:evenodd;fill:#433F50;enable-background:new;} </style> <path class="st0" d="M19,10.4c-4.7,0-8.5,3.8-8.5,8.5s3.8,8.5,8.5,8.5s8.5-3.8,8.5-8.5C27.5,14.1,23.7,10.4,19,10.4 M20.3,21h-2.8 v2.2c0,0.6-0.5,1.1-1.1,1.1c-0.6,0-1.1-0.5-1.1-1.1v-8.1c0-0.6,0.5-1.1,1.1-1.1h3.9c1.9,0,3.5,1.6,3.5,3.5S22.2,21,20.3,21"/> <path class="st0" d="M20.5,16.3h-2.9v2.5h2.9c0.6-0.1,1.1-0.6,1.1-1.3C21.6,16.9,21.1,16.3,20.5,16.3"/> <path class="st0" d="M34.2,19.8c-0.3,1.6-1.2,2.5-2.6,3.1c1.3-0.9,2.2-2.4,2.2-4.1c0-2.5-1.8-4.5-4.2-4.9c0.6,1.3,0.7,2.3,0.6,3.5 c-0.7-5.6-5.5-9.9-11.3-9.9c-6.3,0-11.4,5.1-11.4,11.4c0,1.1,0.1,2.1,0.4,3.1c-0.5-1.3-0.8-2.7-0.8-4.1c0-1.4,0.2-2.7,0.7-3.9 C4,14.5,1,18,1,22.1c0,4.5,3.6,8.3,8.1,8.5h22.3c3.1-0.1,5.7-2.8,5.7-5.9C37,22.6,36,20.8,34.2,19.8 M19,28.4 c-5.3,0-9.6-4.3-9.6-9.6c0-5.3,4.3-9.6,9.6-9.6s9.6,4.3,9.6,9.6S24.3,28.4,19,28.4"/> </svg><svg id="sidebar-box" viewBox="0 0 38 38"> <style type="text/css"> .st0{opacity:0.73;fill-rule:evenodd;clip-rule:evenodd;fill:#433F50;enable-background:new;} </style> <path class="st0" d="M2.4,9.5c0.7,0,1.3,0.6,1.3,1.3v5.7c1.1-0.8,2.5-1.3,4-1.3c2.6,0,4.8,1.4,5.9,3.6c1.1-2.1,3.4-3.6,5.9-3.6 c3.7,0,6.7,3,6.7,6.7s-3,6.7-6.7,6.7c-2.6,0-4.8-1.4-5.9-3.6c-1.1,2.1-3.4,3.6-5.9,3.6c-3.7,0-6.7-2.9-6.7-6.6l0,0V10.8 C1,10.1,1.6,9.5,2.4,9.5z M34.4,15.7c0.5-0.6,1.4-0.7,2-0.2c0.6,0.4,0.8,1.3,0.3,1.9l-3.7,4.5l3.7,4.5c0.5,0.6,0.3,1.4-0.3,1.9 c-0.6,0.4-1.5,0.3-2-0.2L31.2,24l-3.1,3.8c-0.5,0.6-1.4,0.7-2,0.2c-0.6-0.4-0.8-1.3-0.3-1.9l0,0l3.6-4.5l-3.6-4.5l0,0 c-0.5-0.6-0.3-1.4,0.3-1.9c0.6-0.4,1.5-0.3,2,0.2l0,0l3.1,3.8L34.4,15.7L34.4,15.7z M19.6,17.8c-2.2,0-4,1.8-4,4c0,2.2,1.8,4,4,4 s4-1.8,4-4C23.6,19.6,21.8,17.8,19.6,17.8z M7.7,17.8c-2.2,0-4,1.8-4,4s1.8,4,4,4s4-1.8,4-4S10,17.8,7.7,17.8z"/> </svg><svg id="sidebar-google-drive" viewBox="0 0 38 38"> <style type="text/css"> .st0{opacity:0.61;fill:#433F50;enable-background:new;} </style> <path class="st0" d="M16.5,23.5L10,34.8h20.5L37,23.5H16.5z"/> <path class="st0" d="M36.1,21.3L25.6,3.2H12.6L23,21.3H36.1z"/> <path class="st0" d="M11.3,5.4L1,23.2l6.5,11.3l10.3-17.8L11.3,5.4z"/> </svg><svg id="tiny-generic-document" viewBox="0 0 15 15"> <style type="text/css"> .st0{fill:url(#SVGID_1_);} .st1{fill:url(#SVGID_2_);} .st2{fill:#333;} .st3{fill:url(#SVGID_3_);} </style> <linearGradient id="SVGID_1_" gradientUnits="userSpaceOnUse" x1="-8.7354" y1="-908.0761" x2="-8.7354" y2="-916.052" gradientTransform="matrix(1.8521 0 0 1.8521 23.6788 1696.7339)"> <stop offset="0.9126" style="stop-color:#fff"/> <stop offset="1" style="stop-color:#E6E7E8"/> </linearGradient> <linearGradient id="SVGID_2_" gradientUnits="userSpaceOnUse" x1="-12.253" y1="-908.5464" x2="-6.5684" y2="-914.231" gradientTransform="matrix(1.8521 0 0 1.8521 23.6788 1696.7339)"> <stop offset="0.7686" style="stop-color:#fff;stop-opacity:0.1"/> <stop offset="0.942" style="stop-color:#D8DADB;stop-opacity:0.8"/> <stop offset="1" style="stop-color:#A7A9AC;stop-opacity:0.9"/> </linearGradient> <linearGradient id="SVGID_3_" gradientUnits="userSpaceOnUse" x1="-7.82" y1="-914.1115" x2="-7.13" y2="-914.8015" gradientTransform="matrix(1.8521 0 0 1.8521 23.6788 1696.7339)"> <stop offset="0.3821" style="stop-color:#fff"/> <stop offset="0.728" style="stop-color:#F2F2F3"/> <stop offset="1" style="stop-color:#D1D3D4"/> </linearGradient> <path class="st0" d="M6.4,0.1c-3.1,0-4.5,0-4.5,0v14.8h11.3c0,0,0-3.9,0-8c0-2.2-1-2.8-2.7-4.4C8.8,0.9,8.3,0.1,6.4,0.1z"/> <path class="st1" d="M6.4,0.1c-3.1,0-4.5,0-4.5,0v14.8h11.3c0,0,0-3.9,0-8c0-2.2-1-2.8-2.7-4.4C8.8,0.9,8.3,0.1,6.4,0.1z"/> <path class="st2" d="M13.2,15H1.8V0h4.6c0.8,0,1.4,0.1,1.9,0.5c0.5,0.3,1,0.8,1.6,1.4c0.2,0.2,0.4,0.4,0.6,0.5 c0.3,0.3,0.5,0.5,0.7,0.7c1.3,1.2,2,1.9,2,3.8V15z M1.9,14.8h11.1V6.9c0-0.9-0.2-1.5-0.5-2.1c-0.3-0.5-0.8-1-1.4-1.6 c-0.2-0.2-0.5-0.4-0.7-0.7C10.2,2.3,10,2.2,9.8,2C8.6,0.8,8,0.2,6.4,0.2H1.9V14.8z"/> <path class="st3" d="M8.5,0.7c0.6,0.6,0.6,1.6,0.5,2.9c1.2-0.2,2.6,0.1,3.2,0.7c-0.3-0.4-1.1-1.1-1.9-1.8C9.6,1.7,8.9,1,8.5,0.7z"/> <path class="st2" d="M12.3,4.4L12.3,4.4c-0.4-0.3-0.8-0.5-1.4-0.7c-0.6-0.1-1.2-0.1-1.8,0L9,3.7l0-0.1c0.1-1.2,0.1-2.2-0.5-2.8l0,0 l0,0L8.1,0.4l0.4,0.3l0.1,0c0.3,0.2,0.8,0.6,1.3,1.1C10,2,10.2,2.2,10.4,2.4c0.3,0.3,0.5,0.5,0.8,0.7c0.5,0.4,0.9,0.8,1.1,1.1l0,0.1 L12.3,4.4z M9.9,3.4c0.4,0,0.7,0,1,0.1c0.3,0.1,0.6,0.2,0.8,0.3c-0.2-0.2-0.4-0.4-0.6-0.6l0,0c-0.2-0.2-0.5-0.5-0.8-0.7 c-0.2-0.2-0.4-0.4-0.6-0.6C9.5,1.6,9.2,1.3,8.9,1.1c0.3,0.6,0.3,1.4,0.2,2.3C9.4,3.4,9.6,3.4,9.9,3.4z"/> </svg><svg id="tiny-generic-folder" viewBox="0 0 15 15"> <style type="text/css"> .st0{fill:#97DAF8;} .st1{fill:#3829CC;} .st2{fill:#6FC7F1;} </style> <path class="st0" d="M0.1,3c0-0.6,0.3-0.9,0.7-0.9c0,0,3.4,0,4.4,0c1,0,0.8,1.9,2,2c1.6,0,7.1,0,7.1,0c0.4,0,0.7,0.3,0.7,0.7l0,7.3 c0,0.4-0.3,0.7-0.7,0.7H0.7c-0.4,0-0.7-0.3-0.7-0.5L0.1,3z"/> <path class="st1" d="M14.3,12.8H0.7c-0.4,0-0.7-0.3-0.7-0.5L0,3C0,2.4,0.3,2,0.7,2h4.4c0.7,0,0.9,1.2,1.1,1.5C6.5,3.8,6.6,4,7.1,4 h7.1C14.7,4,15,4.3,15,4.7l0,7.3C15,12.5,14.7,12.8,14.3,12.8z M0.7,2.1C0.4,2.1,0.1,2.4,0.1,3l0,9.3c0,0.2,0.3,0.4,0.6,0.4h13.5 c0.4,0,0.6-0.3,0.6-0.6l0-7.3c0-0.4-0.3-0.6-0.6-0.6H7.1c-0.5,0-0.7-0.3-0.9-0.6C6,3.3,5.8,2.1,5.1,2.1H0.7z"/> <path class="st2" d="M0.1,5.6c0-0.4,0.3-0.7,0.7-0.7h13.5c0.4,0,0.7,0.3,0.7,0.7l0,7.6c0,0.4-0.3,0.7-0.7,0.7H0.7 c-0.4,0-0.7-0.3-0.7-0.7C0.1,13.2,0.1,5.6,0.1,5.6z"/> <path class="st1" d="M14.3,14H0.7C0.3,14,0,13.6,0,13.2l0-7.6c0-0.4,0.3-0.7,0.7-0.7h13.5c0.4,0,0.7,0.3,0.7,0.7l0,7.6 C15,13.6,14.7,14,14.3,14z M0.7,5C0.4,5,0.1,5.3,0.1,5.6l0,7.6c0,0.4,0.3,0.6,0.6,0.6h13.5c0.4,0,0.6-0.3,0.6-0.6l0-7.6 c0-0.4-0.3-0.6-0.6-0.6H0.7z"/> </svg></svg>

	<!-- i18n -->
	<i18n>
	<i name="Applications" value="Applications"/>
	<i name="Desktop" value="Desktop"/>
	<i name="Documents" value="Documents"/>
	<i name="Downloads" value="Downloads"/>
	<i name="Mail" value="Mail"/>
	<i name="Mount" value="Mount"/>
	<i name="Network" value="Network"/>
	<i name="Shared" value="Shared"/>
	<i name="Settings" value="Settings"/>
	<i name="Trashcan" value="Trashcan"/>

	<i name="Default Storage" value="Default Storage"/>
	<i name="Karaqu Cloud" value="Karaqu Cloud"/>
	<i name="New Storage" value="New Storage"/>
	<i name="Status" value="Status"/>
	<i name="Name" value="Name"/>
	<i name="Storage" value="Storage"/>
	<i name="Usage" value="Usage"/>
	<i name="Connect" value="Connect&#8230;"/>
	<i name="Connecting" value="Connecting&#8230;"/>
	<i name="Connected" value="Connected"/>
	<i name="Not connected" value="Not connected"/>
	<i name="Untitled" value="Untitled"/>
	<i name="Favorites" value="Favorites"/>
	<i name="External Storage" value="External Storage"/>

	<i name="Error" value="Error"/>
	<i name="Missed call from %s" value="Missed call from %s"/>
	<i name="Call back" value="Call back"/>
	<i name="Ignore" value="Ignore"/>
	<i name="Import" value="Import"/>

	<i id="901" value="Karaqu Premium"/>
	<i id="902" value="Please upgrade your account"/>
	<i id="903" value="Ok"/>
	<i id="904" value="Cancel"/>

	<i id="1000" value="New"/>
	<i id="1001" name="Invalid source path" value="Invalid source path"/>
	<i id="1002" name="Invalid destination path" value="Invalid destination path"/>
	<i id="1003" name="File name must end with alphanumberic character" value="File name must end with alphanumberic character"/>
	<i id="1004" name="File already exists" value="File already exists"/>
	<i id="1005" name="Folder already exists" value="Folder already exists"/>
	<i id="1006" name="Operation is not permitted" value="Operation is not permitted"/>
	<i id="1007" name="Source and destination are same" value="Source and destination are same"/>
	<i id="1008" name="Destination is in source path" value="Destination is in source path"/>

	<i id="1020" value="Value is of wrong type."/>
	<i id="1021" value="Expected two non-null value arguments."/>
	<i id="1022" value="Not allowed."/>
	<i id="1023" value="Bad command."/>
	<i id="1024" value="No matches."/>

	<i id="1090" name="Network" value="Network"/>
	<i id="1091" name="You are online" value="You are online"/>
	<i id="1092" name="You are offline" value="You are offline"/>

	<i id="1100" name="Accept" value="Accept"/>
	<i id="1101" name="Close" value="Close"/>
	<i id="1102" name="&#8230;is now your friend." value="&#8230;is now your friend."/>
	<i id="1103" name="&#8230;sent a friend request." value="&#8230;sent a friend request."/>
	<i id="1104" name="Username not recognized." value="Username not recognized."/>
	<i id="1105" name="User is already friend." value="User is already friend."/>

	<i id="1110" name="Notifications." value="Notifications."/>
	<i id="1111" name="You have %s notifications." value="You have %s notifications."/>
	<i id="1112" name="Show" value="Show"/>
	<i id="1180" value="Missing fields."/>

	<i id="2000" value="Email"/>
	<i id="2001" value="Inbox"/>
	<i id="2002" value="Drafts"/>
	<i id="2003" value="Junk"/>
	<i id="2004" value="Sent"/>
	<i id="2005" value="Deleted"/>
</i18n>

	<!-- mimetypes -->
	<Mime> <i id="_dir" type="karaqu/folder" icon="folder" name="Folder"> <i ns="ant" id="finder"/> </i> <i id="app" type="application/karaqu-x" icon="app-icon" name="Application"/> <i id="css" type="text/css" icon="json" name="CSS" preview="text"> <i ns="ant" id="textedit"/> </i> <i id="gdm" type="" icon="gdm" name="Google Drive Misc"/> <i id="gif" type="image/gif" icon="image" name="GIF" preview="image"> <i ns="ant" id="keane"/> </i> <i id="htm" type="text/html" icon="html" name="Html"/> <i id="html" type="text/html" icon="html" name="Html"/> <i id="jpg" type="image/jpeg" icon="image" name="JPG" preview="image"> <i ns="ant" id="keane"/> <i ns="ant" id="vermeer"/> <i ns="ant" id="goya"/> </i> <i id="jpeg" type="image/jpeg" icon="image" name="JPEG" preview="image"> <i ns="ant" id="keane"/> <i ns="ant" id="vermeer"/> <i ns="ant" id="goya"/> </i> <i id="js" type="text/javascript; charset=UTF-8" icon="js" name="Javascript" preview="text"> <i ns="ant" id="textedit"/> </i> <i id="json" type="application/json" icon="json" name="Json" preview="text"> <i ns="ant" id="textedit"/> </i> <i id="less" type="text/plain" icon="json" name="Less" preview="text"> <i ns="ant" id="textedit"/> </i> <i id="LICENSE" type="text/license" icon="txt" name="License file"/> <i id="md" type="text/markdown" icon="md" name="Markdown" preview="text"> <i ns="sys" id="manual"/> <i ns="ant" id="textedit"/> </i> <i id="y" type="text/y-book" icon="y" name="Y-book" preview="text"> <i ns="ant" id="textedit"/> </i> <i id="man" type="text/markdown" icon="man" name="Manual"> <i ns="ant" id="textedit"/> <i ns="ant" id="manual"/> </i> <i id="mid" type="audio/midi" icon="mp3" name="Midi"> <i ns="ant" id="synth"/> </i> <i id="mov" type="video/quicktime" icon="movie" name="Movie"/> <i id="mp3" type="audio/mpeg" icon="mp3" name="Mp3"> <i ns="ant" id="tunes"/> <i ns="ant" id="imaudio"/> </i> <i id="obj" type="text/plain" icon="image" name="OBJ Geometry"> <i ns="ant" id="degas"/> </i> <i id="ogg" type="audio/ogg" icon="mp3" name="OGG"> <i ns="ant" id="imaudio"/> </i> <i id="pdf" type="application/pdf" icon="pdf" name="Pdf"> <i ns="ant" id="preview"/> </i> <i id="png" type="image/png" icon="image" name="PNG" preview="image"> <i ns="ant" id="keane"/> <i ns="ant" id="goya"/> </i> <i id="pgn" type="text/pgn" icon="txt" name="Portable Game Notation"/> <i id="rtf" type="application/rtf" icon="text" name="RTF"/> <i id="svg" type="image/svg+xml" icon="xml" name="SVG" preview="image"> <i ns="ant" id="textedit"/> </i> <i id="txt" type="text/plain" icon="text" name="Text" preview="text"> <i ns="ant" id="textedit"/> </i> <i id="webp" type="image/webp" icon="image" name="WebP" preview="image"> <i ns="ant" id="keane"/> </i> <i id="wav" type="audio/wav" icon="mp3" name="Wav"> <i ns="ant" id="imaudio"/> </i> <i id="otf" type="font/otf" icon="font" name="Open Type Fonts"/> <i id="ttf" type="font/ttf" icon="font" name="True Type Fonts"/> <i id="woff" type="font/woff" icon="font" name="Web Open Font Format"/> <i id="woff2" type="font/woff2" icon="font" name="Web Open Font Format 2"/>  <i id="xld" type="application/xml" icon="xls" name="Excell"> <i ns="ant" id="eniac"/> </i> <i id="xls" type="application/vnd.ms-excel" icon="xls" name="Excell"> <i ns="ant" id="eniac"/> </i> <i id="xlsx" type="application/vnd.ms-excel" icon="xls" name="Excell"> <i ns="ant" id="eniac"/> </i> <i id="csv" type="text/csv" icon="csv" name="CSV"> <i ns="ant" id="textedit"/> <i ns="ant" id="eniac"/> </i>  <i id="xml" type="application/xml" icon="xml" name="XML"> <i ns="ant" id="textedit"/> </i> <i id="xsl" type="text/xsl" icon="xml" name="XSL"> <i ns="ant" id="textedit"/> </i> <i id="wasm" type="application/wasm" icon="wasm" name="WebAssembly"/> <i id="zip" type="application/zip" icon="zip" name="Zip"/> </Mime>

	<!-- shellmap -->
	<Shell> <i object="sys" path="lY" type="System" description="System Object"> <i switch="a" name="ld.jf" arg="NONE" description="Select all files on desktop."/> <i switch="b" name="kD.nI" arg="NONE" description="Returns system info."/> <i switch="c" name="kD.mF" arg="NONE" description="Opens application about Karaqu."/> <i switch="d" name="jI.z" arg="NONE" description="Show/hide desktop."/> <i switch="e" name="jI.n" arg="NONE" description="Mission Control."/> <i switch="g" name="kD.D" arg="[set]" description="Screensaver settings."/> <i switch="h" name="iI.nu" arg="NONE" description="Start screensaver."/> <i switch="l" name="li.x" arg="[true|false]" sId="menubar-dateTime-toggle" description="Changes menubar clock style."/> <i switch="m" name="li.hP" arg="[digital|analog]" sId="menubar-clock" description="Changes menubar clock style."/> <i switch="n" name="ly.jj" arg="[true|false]" description="Toggle sidebar view."/> <i switch="k" name="ly.L" arg="[title, message]" description="Notification message."/> <i switch="p" name="mV.hf" arg="[stdIn]" description="Parses given string as Shell command."/> <i switch="q" name="li.y" arg="[true|false]" sId="menubar-dateTime-format" description="Changes menubar clock style."/> <i switch="r" name="kD.kC" hidden="1" arg="[key, value]" description="Alter registry with key + value."/> <i switch="s" name="jU.hU" arg="NONE" description="Switch between applications."/> <i switch="t" name="jI.me" arg="NONE" description="Toggle spotlight search."/> <i switch="u" name="kD.hE" arg="[24h|am/pm]" description="Toggles hours between 24h and am/pm."/> <i switch="v" name="li.J" arg="[0-100]" sId="menubar-volume" description="Changes system volume."/> <i switch="x" name="kD.iX" arg="NONE" description="Logout user."/> <i switch="y" name="kD.M" arg="int" description="Sets time difference in seconds from real time."/> <i switch="z" name="kD.iO" arg="[HH:MM]" description="Sets time zone for account."/> </i> <i object="gui" path="lY" type="System" description="Graphical User Interface"> <i switch="a" name="jq.ke" arg="[type]" description="Returns all wallpapers."/> <i switch="b" name="nO.mu" arg="[true|false]" sId="dock-3d-on" description="Dock 3D look."/> <i switch="d" name="nO.kr" arg="[left|bottom|right]" sId="dock-position" description="Positions dock."/> <i switch="e" name="nO.kq" arg="[int]" sId="dock-size" description="Dock icon size."/> <i switch="f" name="nO.hp" arg="[true|false]" sId="dock-app-indicators" description="Toggles dock application indicators."/> <i switch="g" name="nO.ho" arg="[true|false, int]" sId="dock-magnification-on" description="Dock magnification and size."/> <i switch="h" name="nO.ks" arg="[true|false]" sId="dock-auto-show-hide" description="Toggles dock."/> <i switch="i" name="ld.hJ" arg="[hex]" sId="folder-color" description="Sets folder icon color desktop. (list colors '-il')"/> <i switch="j" name="ld.W" arg="[hex]" description="Sets accent color."/> <i switch="k" name="ld.iz" arg="[int]" sId="desktop-icon-size" description="Sets icon size on desktop."/> <i switch="m" name="li.iA" arg="[true|false]" sId="menubar-hide-show" description="Show/hide menubar."/> <i switch="o" name="ld.iy" arg="[name]" sId="ui-theme" description="Switches UI theme."/> <i switch="p" name="ld.ia" arg="[name]" sId="ui-theme-extras" description="Sets / gets theme extras."/> <i switch="q" name="jq.ni" arg="[1|-1]" description="Add / remove workspace."/> <i switch="r" name="nO.iV" arg="NONE" description="Toggles dock application."/> <i switch="s" name="jq.ko" arg="[int]" description="Switches to workspace."/> <i switch="t" name="ld.ic" arg="[true|false]" sId="desktop-icons-hidden" description="Toggle icons on desktop."/> <i switch="w" name="jq.jH" arg="[id, [bg]]" description="Sets / gets background of given workspace."/> <i switch="x" name="jh.jR" arg="NONE" description="Enters screenshot mode."/> </i> <i object="win" path="lY.mq" type="Window" description="Controls Windows and Applications"> <i switch="a" name="mF" arg="[id]" description="Shows info about application."/> <i switch="c" name="ayl" arg="[id]" description="Closes window."/> <i switch="m" name="oh" arg="[name]" description="Changes window layout disposition."/> <i switch="o" name="oi" arg="[id]" description="Opens application."/> <i switch="s" name="iw" arg="state [id]" description="Changes window state; min|max|restore."/> </i> <i object="fs" path="lY.iP" type="Filesystem" description="Filesystem Interface"> <i switch="c" name="lN" arg="[path]" description="Creates folder in filesystem."/> <i switch="d" name="iF" arg="[file]" description="Moves item to filesystem trashcan."/> <i switch="e" name="hr" arg="NONE" description="Empties filesystem trashcan."/> <i switch="f" name="nN.md" arg="[path]" description="Checks if item exists in filesystem."/> <i switch="i" name="kQ" arg="NONE" description="Returns user disk information."/> <i switch="j" name="nN.ol" arg="[path, path]" description="Joins paths."/> <i switch="k" name="lK" hidden="1" arg="[type(s), path]" description="Returns list of all files of kind in folder."/> <i switch="l" name="bwk" hidden="1" arg="[path]" description="Returns folder contents as object."/> <i switch="m" name="kb" arg="[old, new]" description="Move / rename  item in filesystem."/> <i switch="n" name="nD" arg="NONE" alias="sync" description="Syncs files to server, if any in offline cache."/> <i switch="o" name="oi" arg="[file]" description="Opens file in associated app."/> <i switch="p" name="iH" arg="[file]" description="Returns a preview of file, if small."/> <i switch="r" name="kR" arg="[file]" description="Returns file."/> <i switch="s" name="jO" arg="[file, data, overwrite]" description="Saves file to filesystem."/> <i switch="t" name="q" arg="[true|false]" sId="fs-show-hidden-folders" description="Toggles hidden folders."/> <i switch="u" name="lc" arg="[url]" description="Fetches URL, returns like file."/> <i switch="x" name="nl" arg="[src, target]" description="Uncompresses a zip file."/> <i switch="z" name="oL" arg="[target, src]" description="Compresses file(s)."/> <i switch="y" name="kT" arg="[src, target]" description="Copy item to new path."/> </i> <i object="user" path="lY.nR" type="User" description="User related details."> <i switch="a" name="jY" arg="[username]" description="Add friend."/> <i switch="b" name="lW" hidden="1" arg="[prices]" description="Start/end subscription."/> <i switch="c" name="mr" hidden="1" arg="[list]" description="Resizes storage(s)."/> <i switch="f" name="lz" arg="NONE" description="List of current user friends."/> <i switch="i" name="nI" arg="[username]" alias="whoami" description="Info about user."/> <i switch="m" name="lm" arg="[user, string]" description="Sends message to user."/> <i switch="p" name="hz" arg="[object]" description="Approve friend request."/> <i switch="r" name="hA" arg="[username]" description="Remove friend."/> <i switch="s" name="searchFriend_" arg="[string]" description="Search friends (minimum of two characters)."/> <i switch="u" name="mf" arg="[what, value]" description="Update about user info."/> <i switch="w" name="urc" arg="NONE" description="Shows weather data."/> </i> </Shell>

	<!-- mimetypes -->
	<OfflineMq><![CDATA[]]></OfflineMq>

	<!-- filesystem -->
	<FileSystem name="jdoe" quota="1073741824" kind="_dir" size="4" mode="d755">
		<i mode="d755" kind="_dir" path="Desktop/"/>
		<i mode="d755" kind="_dir" path="Documents/"/>
		<i mode="d755" kind="_dir" path="Downloads/"/>
		<i mode="d755" kind="_dir" path="Mount/"/>
		<i mode="d755" kind="_dir" path="Settings/"/>
		<i mode="d755" kind="_dir" path="Trashcan/"/>
	</FileSystem>

	<!-- settings -->
	<Settings>
		<User id="jdoe" name="John Doe"/>
		<Friends>
			<!-- temp friends list -->
			<User id="bill" name="Bill Gates"/>
			<User id="steve" name="Steve Jobs"/>
			<User id="linus" name="Linus Torvalds"/>
		</Friends>
		<Registry>
			<i id="wp-wide" type="string"><![CDATA[]]></i>
			<i id="wp-1" type="string"><![CDATA[background: repeating-linear-gradient(22.5deg, rgba(255,255,255,0.07) 0px, rgba(255,255,255,0.07) 1px,transparent 1px, transparent 21px,rgba(255,255,255,0.07) 21px, rgba(255,255,255,0.07) 22px,transparent 22px, transparent 62px,rgba(255,255,255,0.07) 62px, rgba(255,255,255,0.07) 63px,transparent 63px, transparent 123px),repeating-linear-gradient(112.5deg, rgba(255,255,255,0.07) 0px, rgba(255,255,255,0.07) 1px,transparent 1px, transparent 21px,rgba(255,255,255,0.07) 21px, rgba(255,255,255,0.07) 22px,transparent 22px, transparent 62px,rgba(255,255,255,0.07) 62px, rgba(255,255,255,0.07) 63px,transparent 63px, transparent 123px),repeating-linear-gradient(67.5deg, rgba(255,255,255,0.07) 0px, rgba(255,255,255,0.07) 1px,transparent 1px, transparent 21px,rgba(255,255,255,0.07) 21px, rgba(255,255,255,0.07) 22px,transparent 22px, transparent 62px,rgba(255,255,255,0.07) 62px, rgba(255,255,255,0.07) 63px,transparent 63px, transparent 123px),repeating-linear-gradient(157.5deg, rgba(255,255,255,0.07) 0px, rgba(255,255,255,0.07) 1px,transparent 1px, transparent 21px,rgba(255,255,255,0.07) 21px, rgba(255,255,255,0.07) 22px,transparent 22px, transparent 62px,rgba(255,255,255,0.07) 62px, rgba(255,255,255,0.07) 63px,transparent 63px, transparent 123px),linear-gradient(90deg, hsl(210,81%,56%),hsl(210,81%,56%));::tc,.75,1,0,0deg]]></i>
			<i id="wp-2" type="string"><![CDATA[background: repeating-linear-gradient(22.5deg, rgba(255,255,255,0.07) 0px, rgba(255,255,255,0.07) 1px,transparent 1px, transparent 21px,rgba(255,255,255,0.07) 21px, rgba(255,255,255,0.07) 22px,transparent 22px, transparent 62px,rgba(255,255,255,0.07) 62px, rgba(255,255,255,0.07) 63px,transparent 63px, transparent 123px),repeating-linear-gradient(112.5deg, rgba(255,255,255,0.07) 0px, rgba(255,255,255,0.07) 1px,transparent 1px, transparent 21px,rgba(255,255,255,0.07) 21px, rgba(255,255,255,0.07) 22px,transparent 22px, transparent 62px,rgba(255,255,255,0.07) 62px, rgba(255,255,255,0.07) 63px,transparent 63px, transparent 123px),repeating-linear-gradient(67.5deg, rgba(255,255,255,0.07) 0px, rgba(255,255,255,0.07) 1px,transparent 1px, transparent 21px,rgba(255,255,255,0.07) 21px, rgba(255,255,255,0.07) 22px,transparent 22px, transparent 62px,rgba(255,255,255,0.07) 62px, rgba(255,255,255,0.07) 63px,transparent 63px, transparent 123px),repeating-linear-gradient(157.5deg, rgba(255,255,255,0.07) 0px, rgba(255,255,255,0.07) 1px,transparent 1px, transparent 21px,rgba(255,255,255,0.07) 21px, rgba(255,255,255,0.07) 22px,transparent 22px, transparent 62px,rgba(255,255,255,0.07) 62px, rgba(255,255,255,0.07) 63px,transparent 63px, transparent 123px),linear-gradient(90deg, hsl(210,81%,56%),hsl(210,81%,56%));::tc,.75,1,0,0deg]]></i>
			<i id="wp-3" type="string"><![CDATA[background: repeating-linear-gradient(22.5deg, rgba(255,255,255,0.07) 0px, rgba(255,255,255,0.07) 1px,transparent 1px, transparent 21px,rgba(255,255,255,0.07) 21px, rgba(255,255,255,0.07) 22px,transparent 22px, transparent 62px,rgba(255,255,255,0.07) 62px, rgba(255,255,255,0.07) 63px,transparent 63px, transparent 123px),repeating-linear-gradient(112.5deg, rgba(255,255,255,0.07) 0px, rgba(255,255,255,0.07) 1px,transparent 1px, transparent 21px,rgba(255,255,255,0.07) 21px, rgba(255,255,255,0.07) 22px,transparent 22px, transparent 62px,rgba(255,255,255,0.07) 62px, rgba(255,255,255,0.07) 63px,transparent 63px, transparent 123px),repeating-linear-gradient(67.5deg, rgba(255,255,255,0.07) 0px, rgba(255,255,255,0.07) 1px,transparent 1px, transparent 21px,rgba(255,255,255,0.07) 21px, rgba(255,255,255,0.07) 22px,transparent 22px, transparent 62px,rgba(255,255,255,0.07) 62px, rgba(255,255,255,0.07) 63px,transparent 63px, transparent 123px),repeating-linear-gradient(157.5deg, rgba(255,255,255,0.07) 0px, rgba(255,255,255,0.07) 1px,transparent 1px, transparent 21px,rgba(255,255,255,0.07) 21px, rgba(255,255,255,0.07) 22px,transparent 22px, transparent 62px,rgba(255,255,255,0.07) 62px, rgba(255,255,255,0.07) 63px,transparent 63px, transparent 123px),linear-gradient(90deg, hsl(210,81%,56%),hsl(210,81%,56%));::tc,.75,1,0,0deg]]></i>
			<i id="ws-active" type="number"><![CDATA[1]]></i>
			<i id="folder-color" type="string"><![CDATA[#157efb]]></i>
			<i id="screen-saver-enabled" type="boolean"><![CDATA[true]]></i>
			<i id="screen-saver-time" type="number"><![CDATA[10]]></i>
			<i id="screen-saver-name" type="string"><![CDATA[Colorful Ring]]></i>
			<i id="ui" type="json"><![CDATA[{"theme":"royale-beige","theme-extras":"0","accent-color":"#f5822e"}]]></i>
			<i id="finder-default-path" type="string"><![CDATA[/fs/Desktop]]></i>
			<i id="finder-file-view" type="string"><![CDATA[icons]]></i>
			<i id="finder-icon-size" type="number"><![CDATA[77]]></i>
			<i id="fs-dialog-file-view" type="string"><![CDATA[columns]]></i>
			<i id="fs-dialog-style" type="string"><![CDATA[expanded]]></i>
			<i id="fs-show-hidden-folders" type="boolean"><![CDATA[false]]></i>
			<i id="lang-locale" type="string"><![CDATA[en-en]]></i>
			<i id="i18n-calendar-months" type="json"><![CDATA[["January","February","March","April","May","June","July","August","September","October","November","December"]]]></i>
			<i id="i18n-calendar-days" type="json"><![CDATA[["Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"]]]></i>
			<i id="i18n-calendar-weekStartsWith" type="number"><![CDATA[1]]></i>
			<i id="i18n-calendar-hours" type="string"><![CDATA[24h]]></i>
			<i id="fs-sidebar-favorites" type="raw-xml">
				<item icon="home" path="/fs/"/>
				<item icon="desktop" path="/fs/Desktop"/>
				<item icon="documents" path="/fs/Documents"/>
				<item icon="applications" path="/fs/Applications"/>
				<item icon="network" path="/fs/Network"/>
			</i>
			<i id="fs-subscription-id" type="string"><![CDATA[]]></i>
			<i id="fs-purchased-storage" type="raw-xml"></i>
			<i id="fs-cloud-storage" type="raw-xml"></i>
			<i id="dock-3d-on" type="boolean"><![CDATA[false]]></i>
			<i id="dock-app-indicators" type="boolean"><![CDATA[true]]></i>
			<i id="dock-magnification-on" type="boolean"><![CDATA[false]]></i>
			<i id="dock-magnification-size" type="number"><![CDATA[33]]></i>
			<i id="dock-auto-show-hide" type="boolean"><![CDATA[false]]></i>
			<i id="dock-position" type="string"><![CDATA[bottom]]></i>
			<i id="dock-size" type="number"><![CDATA[55]]></i>
			<i id="dock-entries" type="raw-xml"></i>
			<i id="desktop-icon-size" type="number"><![CDATA[80]]></i>
			<i id="desktop-icons-hidden" type="boolean"><![CDATA[true]]></i>
			<i id="desktop-icons-pos" type="raw-xml"></i>
			<i id="sidebar-notification-duration" type="number"><![CDATA[4]]></i>
			<i id="sidebar-widgets" type="raw-xml">
				<i name="weather"/>
				<i name="calendar"/>
			</i>
			<i id="menubar-clock" type="string"><![CDATA[digital]]></i>
			<i id="menubar-volume" type="number"><![CDATA[47]]></i>
			<i id="menubar-hide-show" type="boolean"><![CDATA[false]]></i>
			<i id="menubar-dateTime-toggle" type="boolean"><![CDATA[true]]></i>
			<i id="menubar-dateTime-format" type="string"><![CDATA[ddd DD MMM HH:mm]]></i>
			<i id="sys-date-time-diff" type="number"><![CDATA[-365]]></i>
			<i id="sys-time-zone" type="string"><![CDATA[+01:00]]></i>
			<i id="last-login" type="string"><![CDATA[2024-04-05]]></i>
			<i id="i18n-temperature-units" type="string"><![CDATA[C]]></i>
		</Registry>
		<WorkSpace>
			<i name="ws-1">
				<i type="app" ns="ant" id="voyager"/>
			</i>
		</WorkSpace>
	</Settings>

	<!-- context menu -->
	<ContextMenu>
		<MenuBar for="system">
			<Group>
				<Menu icon="icon-karaqu" name="Karaqu">
					<Menu name="About Karaqu"/>
					<Menu type="divider"/>
					<Menu name="Theme&#8230;" for="ui-theme">
						<Menu name="Light" shell="sys -o karaqu-light" check-group="ui-theme" is-checked="1"/>
						<Menu name="Dark" shell="sys -o karaqu-dark" check-group="ui-theme"/>
					</Menu>
					<Menu type="divider"/>
					<Menu name="Recent Items&#8230;" for="recent-items" disabled="1"/>
					<Menu type="divider"/>
					<Menu name="Quit"/>
				</Menu>
			</Group>
			<Group>
				<Menu icon="icon-volume" class="menubar-speakers_">
					<Menu type="caption" name="Volume:"/>
					<Menu type="slider" min="0" max="100" value="50" shell="sys -v"/>
					<Menu type="divider"/>
					<Menu name="Sound Preferences" shell="win -o preferences sound"/>
				</Menu>
				<Menu icon="icon-clock" class="menubar-date-time_">
					<Menu name="View as Analogue" shell="sys -m clock analog" check-group="menubar-clock"/>
					<Menu name="View as Digital" shell="sys -m clock digital" check-group="menubar-clock" is-checked="1"/>
				</Menu>
			</Group>
		</MenuBar>

		<Menu for="desktop">
			<Menu name="Reload" shell="sys -r"/>
			<Menu type="divider"/>
			<Menu name="Theme&#8230;" invoke="ui-theme"/>
			<Menu type="divider"/>
			<Menu name="Quit"/>
		</Menu>
	</ContextMenu>
<details> <meta name="system" value="Karaqu" version="1.6.3" buildDate="2024-04-05"/> <meta name="company" value="Defiant System AB"/> <meta name="author" value="Hakan Bilgin" email="mr.hakan.bilgin@gmail.com"/> <meta name="repository" value="//github.com/Defiant-System/karaqu"/> <meta name="screen" width="1317" height="1336"/> <meta name="theme" value="light"/> <meta name="stripe-publishable-key" value="pk_ou51In7eZAD07kUvcw9hA9oc7WwkGNK0T0G8ulNgeIoy6jpjoyi3iYbAreYvo1uQPqNl5TpNhwHEdFF25fjBOJKHJIt00O4peGUrf"/> </details> <xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:ant="karaqu.com">  <xsl:output method="html" omit-xml-declaration="yes"/> <xsl:strip-space elements="*"/> <xsl:template match="text()" />   <xsl:variable name="white-space" select="'                           '" /> <xsl:variable name="lowercase" select="'abcdefghijklmnopqrstuvwxyz'" /> <xsl:variable name="uppercase" select="'ABCDEFGHIJKLMNOPQRSTUVWXYZ'" />   <xsl:template name="substring-after-last"> <xsl:param name="string" /> <xsl:param name="delimiter" /> <xsl:choose> <xsl:when test="contains($string, $delimiter)"> <xsl:call-template name="substring-after-last"> <xsl:with-param name="string" select="substring-after($string, $delimiter)" /> <xsl:with-param name="delimiter" select="$delimiter" /> </xsl:call-template> </xsl:when> <xsl:otherwise><xsl:value-of select="$string" /></xsl:otherwise> </xsl:choose> </xsl:template>   <xsl:template name="storage-size"> <xsl:param name="bytes"/> <xsl:choose> <xsl:when test="format-number($bytes div 1073741824, '###0.000') &gt;= 1"><xsl:value-of select="format-number($bytes div 1073741824, '###0')"/> GB</xsl:when> <xsl:when test="format-number($bytes div 1048576, '###0.000') &gt;= 1"><xsl:value-of select="format-number($bytes div 1048576, '###0')"/> MB</xsl:when> </xsl:choose> </xsl:template>   <xsl:template name="file-size"> <xsl:param name="bytes"/> <xsl:param name="kind"/> <xsl:choose> <xsl:when test="$kind = '_dir'">--</xsl:when> <xsl:when test="format-number($bytes div 1024, '0') = 0"><xsl:value-of select="$bytes"/> bytes</xsl:when> <xsl:when test="format-number($bytes div 1073741824, '###0.000') &gt;= 1"><xsl:value-of select="format-number($bytes div 1073741824, '###0.0')"/> GB</xsl:when> <xsl:when test="format-number($bytes div 1048576, '###0.000') &gt;= 1"><xsl:value-of select="format-number($bytes div 1048576, '###0.0')"/> MB</xsl:when> <xsl:otherwise><xsl:value-of select="format-number($bytes div 1024, '###0.0')"/> KB</xsl:otherwise> </xsl:choose> </xsl:template>   <xsl:template name="file-sizeD"> <xsl:param name="bytes"/> <xsl:param name="kind"/> <xsl:choose> <xsl:when test="$kind = '_dir'">--</xsl:when> <xsl:when test="format-number($bytes div 1024, '0') = 0"><xsl:value-of select="$bytes"/> bytes</xsl:when> <xsl:when test="format-number($bytes div 1073741824, '###0.000') &gt;= 1"><xsl:value-of select="format-number($bytes div 1073741824, '###0')"/> GB</xsl:when> <xsl:when test="format-number($bytes div 1048576, '###0.000') &gt;= 1"><xsl:value-of select="format-number($bytes div 1048576, '###0')"/> MB</xsl:when> <xsl:otherwise><xsl:value-of select="format-number($bytes div 1024, '###0')"/> KB</xsl:otherwise> </xsl:choose> </xsl:template>   <xsl:template name="folder-size"> <xsl:call-template name="file-size"> <xsl:with-param name="bytes" select="sum(.//@size)" /> </xsl:call-template> </xsl:template>   <xsl:template name="rfg"> <xsl:for-each select="//Settings/Registry/*[@id = 'dock-entries']/*"> <xsl:sort order="ascending" select="@order" data-type="number"/> <xsl:choose> <xsl:when test="@type='divider'"> <div class="zna" data-context="dock-settings"></div> </xsl:when> <xsl:otherwise> <xsl:call-template name="mrk"/> </xsl:otherwise> </xsl:choose> </xsl:for-each> <div class="mso"></div> </xsl:template>   <xsl:template name="mrk"> <div> <xsl:attribute name="class">soq <xsl:if test="@ns='ant' and @id='preferences'">ir</xsl:if></xsl:attribute> <xsl:attribute name="data-id"><xsl:value-of select="@did"/></xsl:attribute> <xsl:if test="@temporary"> <xsl:attribute name="data-id"><xsl:value-of select="@ns"/>:<xsl:value-of select="@id"/></xsl:attribute> </xsl:if> <xsl:choose> <xsl:when test="@path"> <xsl:attribute name="data-context">dock-fs-item</xsl:attribute> <xsl:call-template name="ymd"> <xsl:with-param name="itemPath" select="substring( @path, 4 )" /> </xsl:call-template> </xsl:when> <xsl:otherwise> <xsl:attribute name="data-context">dock-app</xsl:attribute> <xsl:if test="not(@temporary) and position() = last()"> <xsl:attribute name="data-path">/Trashcan/</xsl:attribute> <xsl:attribute name="data-context">dock-trashcan<xsl:if test="count(//FileSystem/i[@name='Trashcan']/*) &gt; 0">-full</xsl:if></xsl:attribute> <xsl:attribute name="data-fixed">1</xsl:attribute> </xsl:if> <xsl:if test="@shell = 'gui -r'"> <xsl:attribute name="data-context">dock-applications</xsl:attribute> <xsl:attribute name="data-fixed">1</xsl:attribute> </xsl:if> <xsl:if test="@ns and @id"> <xsl:attribute name="style">background-image: url(/app/<xsl:value-of select="@ns"/>/icons/app-icon-<xsl:value-of select="@id"/>.png)</xsl:attribute> </xsl:if> </xsl:otherwise> </xsl:choose> <div class="jjs"><xsl:choose> <xsl:when test="@name"><xsl:value-of select="@name"/></xsl:when> <xsl:when test="@shell = 'gui -r'"><xsl:value-of select="//i18n/i[@name = 'Applications']/@value"/></xsl:when> <xsl:when test="not(@temporary) and position() = last()"><xsl:value-of select="//i18n/i[@name = 'Trashcan']/@value"/></xsl:when> <xsl:otherwise><xsl:value-of select="//Apps/*[@ns=current()/@ns and @id=current()/@id]/@name"/></xsl:otherwise> </xsl:choose></div> <xsl:if test="@ns='ant' and @id='preferences' and //Settings/User[@accounthww = '1']"> <b class="lcj">1</b> </xsl:if> </div> </xsl:template>   <xsl:template name="rhv"> <div class="wcy"> <xsl:attribute name="data-position"> <xsl:value-of select="//Settings/Registry/*[@id='dock-position']/text()"/> </xsl:attribute> <h2><xsl:value-of select="//i18n/i[@name = 'Applications']/@value"/></h2> <div class="lgn"> <xsl:for-each select="/ledger/Settings/Apps/*"> <xsl:sort order="descending" select="@mStamp"/> <xsl:if test="position() &lt; 36 and @name"> <div class="vkj"> <xsl:attribute name="data-shell">win -o <xsl:value-of select="@ns"/>:<xsl:value-of select="@id"/></xsl:attribute> <i class="wwh"> <xsl:attribute name="style">background-image: url(/app/<xsl:value-of select="@ns"/>/icons/app-icon-<xsl:value-of select="@id"/>.png)</xsl:attribute> </i> <span><xsl:value-of select="@name"/></span> </div> </xsl:if> </xsl:for-each> </div> <div class="mlr"></div> </div> </xsl:template>   <xsl:template name="ldw"> <xsl:for-each select="//SidebarNotifications/*"> <xsl:sort order="descending" select="@_id"/> <xsl:call-template name="gds" /> </xsl:for-each> </xsl:template>  <xsl:template name="gds"> <div class="xpr" sys-click="notification-click"> <xsl:attribute name="data-id"><xsl:value-of select="@_id" /></xsl:attribute> <xsl:attribute name="data-ttl"><xsl:value-of select="@ttl" /></xsl:attribute> <xsl:if test="@timer = '-1'"><xsl:attribute name="data-timer">-1</xsl:attribute></xsl:if> <div class="xjz"> <i class="wwh"> <xsl:attribute name="style">background-image: <xsl:choose> <xsl:when test="@img and not(@app)"> url(<xsl:value-of select="@img" />); </xsl:when> <xsl:when test="starts-with(@icon, 'sys:')"> url(/app/icons/<xsl:value-of select="substring-after(@icon, 'sys:')" />.png); </xsl:when> <xsl:otherwise> url(/app/<xsl:value-of select="@ns" />/icons/app-icon-<xsl:value-of select="@app" />.png); </xsl:otherwise> </xsl:choose></xsl:attribute> </i> </div> <div class="zol"> <h5><xsl:value-of select="@title" /></h5> <div><xsl:value-of select="text()" disable-output-escaping="yes"/></div> </div> <div class="aiq"> <xsl:for-each select="./option"> <span> <xsl:attribute name="data-id"><xsl:value-of select="@id" /></xsl:attribute> <xsl:choose> <xsl:when test="@data-shell"> <xsl:attribute name="data-shell"><xsl:value-of select="@data-shell" /></xsl:attribute> </xsl:when> <xsl:otherwise> <xsl:attribute name="sys-click"> <xsl:if test="@payload">notification-do</xsl:if> <xsl:if test="not(@payload)">notification-close</xsl:if> </xsl:attribute> </xsl:otherwise> </xsl:choose> <xsl:value-of select="text()" /> </span> </xsl:for-each> <xsl:if test="count(./option) = 0"> <span sys-click="notification-close">Close</span> </xsl:if> </div> </div> </xsl:template>  <xsl:template name="hai"> <div class="ovr" sys-click="do-tab-row"> <div class="fxm"> <div class="qzk">Today</div> <div>Notifications</div> </div>  <div class="ctu"> <!-- Today --> <div class="tab-body-bbd qzk"> <div class="fwx"> <span class="hu"></span>,<br/> <span class="c"></span> </div>  <xsl:for-each select="//Settings/Registry/*[@id = 'sidebar-widgets']/*"> <xsl:call-template name="vvs" /> </xsl:for-each> </div> <!-- Notifications --> <div class="j"></div> </div> </div> </xsl:template>  <xsl:template name="vvs"> <xsl:choose> <xsl:when test="@name = 'weather'"> <div class="ohd urc"> <span class="vvz"></span> <h2><!-- temperature goes here --></h2> <h3><!-- city goes here --></h3> <div> <i class="icon-sunset"></i> <i class="icon-arrow-ne"></i> <span><!-- sunrise goes here --></span> <i class="icon-arrow-se"></i> <span><!-- sunset goes here --></span> </div> <i class="icon-refresh" sys-click="refresh-widget"></i> </div> </xsl:when> <xsl:when test="@name = 'calendar'"> <div class="ohd edn"> <div class="xvc"> <div class="ohw"> <!-- calendar HTML goes here --> </div> </div> </div> </xsl:when> <xsl:when test="@name = 'stats'"> <div class="ohd pei"> <svg viewbox="0 0 120 120"> <circle class="st0" cx="60" cy="60" r="50" /> <circle class="st1" cx="60" cy="60" r="50" /> </svg> <h4></h4> <h2><span></span> Users</h2> <div class="jvd"></div> <i class="icon-refresh" sys-click="refresh-widget"></i> </div> </xsl:when> </xsl:choose> </xsl:template>   <xsl:template name="pds"> <div class="trf"> <xsl:for-each select="/ledger/Settings/WorkSpace//i[@type='app'][@zIndex]"> <xsl:sort data-type="number" order="descending" select="@zIndex"/> <xsl:variable name="xApp" select="/ledger/Settings/Apps/*[@ns = current()/@ns][@id = current()/@id]" /> <div class="as-xjz"> <xsl:attribute name="style">background-image: url(/app/<xsl:value-of select="@ns"/>/icons/app-icon-<xsl:value-of select="@id"/>.png)</xsl:attribute> <xsl:attribute name="data-ns"><xsl:value-of select="@ns"/></xsl:attribute> <xsl:attribute name="data-id"><xsl:value-of select="@id"/></xsl:attribute> <span><xsl:value-of select="$xApp/@name"/></span> </div> </xsl:for-each> </div> </xsl:template>  <xsl:template name="pxx"> <div class="trf"> <div class="as-xjz" style="background-image: url(/app/ant/icons/app-icon-finder.png);"> <span>Finder</span> </div> <div class="as-xjz" style="background-image: url(/app/ant/icons/app-icon-calendar.png);"> <span>Calendar</span> </div> <div class="as-xjz" style="background-image: url(/app/ant/icons/app-icon-mail.png);"> <span>Mail</span> </div> <div class="as-xjz" style="background-image: url(/app/ant/icons/app-icon-eniac.png);"> <span>Eniac</span> </div> <div class="as-xjz" style="background-image: url(/app/ant/icons/app-icon-preferences.png);"> <span>System Preferences</span> </div> </div> </xsl:template>   <xsl:template name="lgc"> <xsl:choose> <xsl:when test="/ledger/Settings/Registry/i[@id = 'wp-wide']/text()"> <xsl:for-each select="/ledger/Settings/WorkSpace/*"> <xsl:call-template name="dwx" /> </xsl:for-each> </xsl:when> <xsl:otherwise> <xsl:for-each select="/ledger/Settings/WorkSpace/*"> <xsl:call-template name="weo" /> </xsl:for-each> </xsl:otherwise> </xsl:choose> <i sys-click="add-workspace"></i> </xsl:template>   <xsl:template name="dwx"> <xsl:variable name="wsActive"><xsl:value-of select="/ledger/Settings/Registry/i[@id = 'ws-active']/text()" /></xsl:variable> <xsl:variable name="bgUrl"><xsl:value-of select="/ledger/Settings/Registry/i[@id = 'wp-wide']/text()" /></xsl:variable> <div sys-click="switch-to-workspace"> <xsl:attribute name="data-id">wide-<xsl:value-of select="position()"/></xsl:attribute> <xsl:attribute name="style">background-image: url(<xsl:value-of select="substring-before( substring-after( $bgUrl, 'url(' ), ')' )"/>)</xsl:attribute> <xsl:if test="position() = $wsActive"><xsl:attribute name="class">amt</xsl:attribute></xsl:if> <xsl:if test="position() != 1"><i sys-click="remove-workspace"></i></xsl:if> <span>Workspace <xsl:value-of select="position()"/></span> </div> </xsl:template>   <xsl:template name="weo"> <xsl:variable name="wsActive"><xsl:value-of select="/ledger/Settings/Registry/i[@id = 'ws-active']/text()" /></xsl:variable> <xsl:variable name="bgUrl"><xsl:call-template name="gxg" /></xsl:variable> <div sys-click="switch-to-workspace"> <xsl:attribute name="style"><xsl:value-of select="$bgUrl"/>;</xsl:attribute> <xsl:if test="position() = $wsActive"><xsl:attribute name="class">amt</xsl:attribute></xsl:if> <xsl:if test="position() != 1"><i sys-click="remove-workspace"></i></xsl:if> <span>Workspace <xsl:value-of select="position()"/></span> </div> </xsl:template>   <xsl:template name="gxg"> <xsl:variable name="wpId">wp-<xsl:value-of select="position()"/></xsl:variable> <xsl:variable name="wpValue"><xsl:value-of select="/ledger/Settings/Registry/i[@id = $wpId]/text()"/></xsl:variable> <xsl:variable name="svgWp" select="substring-before( substring-after( $wpValue, '::' ), '::' )"/> <xsl:variable name="svgGr" select="substring-after( substring-after( $wpValue, '::' ), '::' )"/> <xsl:choose> <xsl:when test="substring-before( $wpValue, '::' ) = 'live'"> background: url(/cdn/img/bg/live/<xsl:value-of select="$svgWp"/>.jpg) no-repeat 50% 50%/cover; </xsl:when> <xsl:when test="substring-before( $wpValue, '::' ) = 'dynamic'"> background: <xsl:value-of select="$svgWp"/>; --svg-radial: <xsl:value-of select="$svgGr"/>; </xsl:when> <xsl:otherwise> <xsl:value-of select="substring-before( $wpValue, ';' )"/> </xsl:otherwise> </xsl:choose> </xsl:template>   <xsl:template name="xzh"> <div class="mgw"> <span class="icon-magnify"></span> <span class="qug" data-content="— No Results"></span> <input type="text" name="g1" placeholder="Spotlight Search" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false"/> <div class="opens-with-app-icon"></div> </div> <div class="ygr"></div> </xsl:template>  <xsl:template name="alp"> <div class="qqk" sys-click="open-matched"> <xsl:for-each select="./*"> <xsl:if test="count(./*) &gt; 0"> <div class="gkp"><xsl:value-of select="@name"/></div> <xsl:for-each select="./*"> <div> <xsl:attribute name="data-id"><xsl:value-of select="@match-id"/></xsl:attribute> <xsl:attribute name="data-kind"><xsl:value-of select="@match-kind"/></xsl:attribute> <xsl:attribute name="data-shell"><xsl:value-of select="@match-shell"/></xsl:attribute> <xsl:attribute name="data-opens-with"><xsl:value-of select="@opens-with"/></xsl:attribute> <xsl:attribute name="class"> lsz <xsl:value-of select="@type"/> <xsl:if test="@match-id = 1"> jye</xsl:if> </xsl:attribute> <i class="jxb"><xsl:call-template name="icon-kind"/></i> <span class="name"><xsl:value-of select="@name"/></span> </div> </xsl:for-each> </xsl:if> </xsl:for-each> </div> <div class="ftq"></div> </xsl:template>  <xsl:template name="tsm"> <xsl:param name="node" select="."/>  <div class="pvp"> <xsl:choose> <xsl:when test="$node/@kind = 'app'"> <div class="hwm"> <xsl:attribute name="style">background-image: url('/app/<xsl:value-of select="$node/@ns"/>/icons/app-icon-<xsl:value-of select="$node/@id"/>.png');</xsl:attribute> </div> <h2><xsl:value-of select="$node/@name"/></h2> <h3>Version: <xsl:value-of select="$node/@version"/></h3> </xsl:when> <xsl:when test="//Mime/*[@id = $node/@kind]/@preview = 'image'"> <div class="hwm"> <xsl:attribute name="style">background-image: url('<xsl:value-of select="$node/@bg-path"/>?w=232&amp;h=148');</xsl:attribute> </div> <h2 class="image-name"><xsl:value-of select="$node/@name"/></h2> </xsl:when> <xsl:when test="$node[@kind = '_dir']"> <div class="keh"> <xsl:attribute name="style">background-image: url(/app/icons/generic-folder.png);</xsl:attribute> </div> <h2><xsl:value-of select="$node/@name"/></h2> <h3> <xsl:choose> <xsl:when test="$node/@child-count = 0">Empty</xsl:when> <xsl:when test="$node/@child-count = 1">1 item</xsl:when> <xsl:otherwise> <xsl:value-of select="$node/@child-count"/> items </xsl:otherwise> </xsl:choose> </h3> </xsl:when> <xsl:otherwise> <div class="keh"> <xsl:attribute name="style">background-image: url(/app/icons/generic-document.png);</xsl:attribute> </div> <span class="jxb cfm"> <xsl:attribute name="data-kind"><xsl:value-of select="$node/@kind"/></xsl:attribute> <xsl:call-template name="icon-kind"/> </span> <h2><xsl:value-of select="$node/@name"/></h2> </xsl:otherwise> </xsl:choose>  <div class="vmw"> <xsl:value-of select="translate($node/@item-path, '/', '→')"/> </div> </div>  <div class="zct"> <div class="tqh"> <span>Kind</span> <span> <xsl:value-of select="//Mime/*[@id = $node/@kind]/@name"/> <xsl:if test="$node/@kind != 'app' and $node/@kind != '_dir'"> file</xsl:if> </span> </div> <div class="tqh"> <span>Size</span> <span><xsl:call-template name="file-size"> <xsl:with-param name="bytes" select="$node/@size" /> </xsl:call-template></span> </div> <div class="tqh"> <span>Modified</span> <span><xsl:value-of select="$node/@mDate"/></span> </div> </div> </xsl:template>   <xsl:template name="wmu"> <xsl:for-each select="./*"> <xsl:variable name="itemPath"><xsl:call-template name="get-file-path"/></xsl:variable> <xsl:variable name="itemPos" select="//Settings/Registry/*[@id='desktop-icons-pos']/*[@name = current()/@name]"/>  <div class="jxb" data-context="fs-item"> <xsl:attribute name="data-kind"><xsl:value-of select="@kind"/></xsl:attribute> <xsl:if test="@kind = '_dir'"> <xsl:attribute name="data-path"><xsl:value-of select="$itemPath"/></xsl:attribute> </xsl:if> <xsl:if test="substring( @mode, 1, 1 ) = 'l'"> <xsl:attribute name="data-link"><xsl:value-of select="@link"/></xsl:attribute> </xsl:if> <xsl:attribute name="style"> top: <xsl:value-of select="$itemPos/@top"/>px; left: <xsl:value-of select="$itemPos/@left"/>px; </xsl:attribute> <xsl:if test="@ant:nr"> <xsl:attribute name="class">jxb hbm <xsl:if test="@kind = '_dir' and not(@ant:oM)">wdk</xsl:if> <xsl:if test="@ant:jQ"> wdk C</xsl:if> </xsl:attribute> <xsl:attribute name="data-clone"><xsl:value-of select="@ant:nr"/></xsl:attribute> </xsl:if>  <xsl:call-template name="ymd"> <xsl:with-param name="itemPath" select="$itemPath" /> </xsl:call-template>  <span class="aoz"><xsl:value-of select="@name"/></span>  <xsl:if test="@ant:nr and @kind = '_dir' or @ant:jQ"> <div class="non"><span></span></div> </xsl:if> </div> </xsl:for-each> </xsl:template>   <xsl:template name="ymd"> <xsl:param name="itemPath" /> <xsl:choose> <xsl:when test="(//Mime/*[@id=current()/@kind]/@preview = 'image' or //Mime/*[@id=current()/@kind]/@preview = 'svg') and substring( @mode, 1, 1 ) != 'l'"> <span class="pvp"> <span class="hwm"> <xsl:attribute name="style">background-image: url('/fs<xsl:value-of select="$itemPath"/>?w=232&amp;h=148');</xsl:attribute> </span> </span> </xsl:when> <xsl:otherwise> <span> <xsl:call-template name="icon-type"> <xsl:with-param name="hiRes" select="1"/> </xsl:call-template> <xsl:if test="@kind != '_dir'"> <xsl:call-template name="icon-kind"> <xsl:with-param name="hiRes" select="1"/> </xsl:call-template> </xsl:if> </span> </xsl:otherwise> </xsl:choose> </xsl:template>   <xsl:template name="fs-dialog-sideBar"> <xsl:param name="viewPath" /> <xsl:call-template name="fs-sideBar"> <xsl:with-param name="viewPath" select="concat( '/fs', $viewPath )" /> </xsl:call-template> </xsl:template>   <xsl:template name="fs-sideBar"> <xsl:param name="viewPath" select="//Settings/Registry/*[@id = 'finder-default-path']/text()"/> <!-- favorites --> <xsl:call-template name="fs-sideBar-block"> <xsl:with-param name="title" select="//i18n/i[@name = 'Favorites']/@value" /> <xsl:with-param name="entries" select="//Settings/Registry/*[@id = 'fs-sidebar-favorites']" /> </xsl:call-template>  <!-- cloud storages --> <xsl:if test="count( //Settings/Registry/*[@id = 'fs-cloud-storage']/item ) > 0"> <xsl:call-template name="fs-sideBar-block"> <xsl:with-param name="title" select="//i18n/i[@name = 'External Storage']/@value" /> <xsl:with-param name="entries" select="//Settings/Registry/*[@id = 'fs-cloud-storage']" /> </xsl:call-template> </xsl:if> </xsl:template>   <xsl:template name="fs-sideBar-block"> <xsl:param name="title"/> <xsl:param name="entries"/> <div class="wrapper"> <legend> <xsl:attribute name="data-id"><xsl:value-of select="$entries/@id"/></xsl:attribute> <xsl:value-of select="$title"/> <span class="btn-toggle" sys-click="toggle-sidebar-block" toggle-text="Show">Hide</span> </legend> <div class="list-wrapper" sys-click="get-sidebar-item"> <ul> <xsl:for-each select="$entries/*"> <xsl:call-template name="fs-sideBar-item" /> </xsl:for-each> </ul> </div> </div> </xsl:template>   <xsl:template name="fs-sideBar-item"> <xsl:param name="viewPath" select="//Settings/Registry/*[@id = 'finder-default-path']/text()"/> <li> <xsl:if test="concat( @path, '/' ) = $viewPath"> <xsl:attribute name="class">vsc</xsl:attribute> </xsl:if> <xsl:if test="@path"> <xsl:attribute name="data-path"><xsl:value-of select="@path"/></xsl:attribute> </xsl:if> <span class="sidebar-icon"> <xsl:attribute name="style">background-image: url(/app/icons/sidebar-<xsl:value-of select="@icon"/>.png);</xsl:attribute> </span> <xsl:call-template name="get-item-name"/> </li> </xsl:template>   <xsl:template name="fs-fileView"> <xsl:param name="fsRegId" select="'finder-file-view'"/> <div class="xme"> <xsl:choose> <xsl:when test="//Settings/Registry/*[@id = $fsRegId and text() = 'columns'] and @kind = 'user'"> <xsl:call-template name="fs-userShared"/> </xsl:when> <xsl:when test="//Settings/Registry/*[@id = $fsRegId and text() = 'columns'] and @kind != '_dir'"> <xsl:call-template name="fs-filePreview"/> </xsl:when> <xsl:when test="//Settings/Registry/*[@id = $fsRegId and text() = 'columns']"> <div class="vpc xje" data-context="fs-folder-content" sys-click="select-column-file"> <xsl:attribute name="data-path"><xsl:call-template name="get-file-path"/></xsl:attribute> <xsl:for-each select="./*"> <xsl:sort order="descending" select="substring( @mode, 1, 1 ) = 'd'"/> <xsl:sort order="ascending" select="@name"/> <xsl:variable name="itemPath"><xsl:call-template name="get-file-path"/></xsl:variable>  <xsl:if test="count(//FsReserved/*[@path = $itemPath]/@hidden) = 0 or //Settings/Registry/*[@id = 'fs-show-hidden-folders' and text() = 'true']"> <div class="jxb" data-context="fs-item"> <xsl:attribute name="data-kind"><xsl:value-of select="@kind"/></xsl:attribute> <xsl:if test="@kind = '_dir'"> <xsl:attribute name="data-path"><xsl:value-of select="$itemPath"/></xsl:attribute> </xsl:if> <xsl:if test="substring( @mode, 1, 1 ) = 'l'"> <xsl:attribute name="data-link"><xsl:value-of select="@link"/></xsl:attribute> </xsl:if> <xsl:if test="@ant:nr"> <xsl:attribute name="class">jxb hbm <xsl:if test="@kind = '_dir' and not(@ant:oM)">wdk</xsl:if> <xsl:if test="@ant:jQ"> wdk C</xsl:if> </xsl:attribute> <xsl:attribute name="data-clone"><xsl:value-of select="@ant:nr"/></xsl:attribute> </xsl:if> <i class="evx"> <xsl:call-template name="icon-kind"> <xsl:with-param name="size" select="1" /> </xsl:call-template> </i> <xsl:call-template name="get-item-name"> <xsl:with-param name="itemPath" select="substring( $itemPath, 1 )"/> </xsl:call-template>  <xsl:if test="@ant:nr and @kind = '_dir' or @ant:jQ"> <div class="non"><span></span></div> </xsl:if> </div> </xsl:if> </xsl:for-each> </div> </xsl:when> <xsl:when test="//Settings/Registry/*[@id = $fsRegId and text() = 'list']"> <div class="bwk"> <div class="tie" sys-click="sort-file-view-by"> <span data-sort="@name" data-type="text" class="right-resize edd ascending" data-order="ascending">Name</span> <span data-sort="@mStamp" data-type="number" class="right-resize">Date Modified</span> <span data-sort="@size" data-type="number" class="right-resize">Size</span> <span data-sort="@kind" data-type="text">Kind</span> </div> <div class="xlu" data-context="fs-folder-content" sys-click="select-list-file"> <xsl:attribute name="data-path"><xsl:call-template name="get-file-path"/></xsl:attribute> <xsl:call-template name="fs-fileView-list"/> </div> </div> </xsl:when> <xsl:otherwise> <div class="tio" data-context="fs-folder-content" sys-click="select-icon-file"> <xsl:attribute name="data-path"><xsl:call-template name="get-file-path"/></xsl:attribute> <xsl:call-template name="fs-fileView-icons"/> </div> </xsl:otherwise> </xsl:choose> </div> </xsl:template>   <xsl:template name="fs-fileView-icons"> <xsl:for-each select="./*"> <xsl:sort order="descending" select="substring( @mode, 1, 1 ) = 'd'"/> <xsl:sort order="ascending" select="@name"/> <xsl:variable name="itemPath"><xsl:call-template name="get-file-path"/></xsl:variable> <xsl:if test="count(//FsReserved/*[@path = $itemPath]/@hidden) = 0 or //Settings/Registry/*[@id = 'fs-show-hidden-folders' and text() = 'true']"> <div class="jxb" data-context="fs-item"> <xsl:attribute name="data-kind"><xsl:value-of select="@kind"/></xsl:attribute> <xsl:if test="@kind = '_dir'"> <xsl:attribute name="data-path"><xsl:value-of select="$itemPath"/></xsl:attribute> </xsl:if> <xsl:if test="@ant:nr"> <xsl:attribute name="class">jxb hbm  <xsl:if test="@kind = '_dir' and not(@ant:oM)">wdk</xsl:if> <xsl:if test="@ant:jQ"> wdk C</xsl:if> </xsl:attribute> <xsl:attribute name="data-clone"><xsl:value-of select="@ant:nr"/></xsl:attribute> </xsl:if>  <xsl:choose> <xsl:when test="(//Mime/*[@id=current()/@kind]/@preview = 'image' or //Mime/*[@id=current()/@kind]/@preview = 'svg') and substring( @mode, 1, 1 ) != 'l'"> <div class="pvp"> <div class="hwm"> <xsl:attribute name="style">background-image: url('/fs<xsl:value-of select="$itemPath"/>?w=232&amp;h=148');</xsl:attribute> </div> </div> </xsl:when> <xsl:otherwise> <div class="evx"> <xsl:call-template name="icon-type"/> <xsl:if test="@kind != '_dir' and @kind != 'app'"> <span><xsl:call-template name="icon-kind"/></span> </xsl:if> </div> </xsl:otherwise> </xsl:choose>  <xsl:call-template name="get-item-name"> <xsl:with-param name="itemPath" select="substring( $itemPath, 1 )"/> </xsl:call-template>  <xsl:if test="@ant:nr and @kind = '_dir' or @ant:jQ"> <div class="non"><span></span></div> </xsl:if> </div> </xsl:if> </xsl:for-each> </xsl:template>   <xsl:template name="fs-fileView-list"> <xsl:for-each select="./*"> <xsl:sort order="descending" select="substring( @mode, 1, 1 ) = 'd'"/> <xsl:sort order="ascending" select="@name"/> <xsl:variable name="itemPath"><xsl:call-template name="get-file-path"/></xsl:variable> <xsl:if test="count(//FsReserved/*[@path = $itemPath]/@hidden) = 0 or //Settings/Registry/*[@id = 'fs-show-hidden-folders' and text() = 'true']"> <div class="jxb" data-context="fs-item"> <xsl:attribute name="data-kind"><xsl:value-of select="@kind"/></xsl:attribute> <xsl:if test="@kind = '_dir'"> <xsl:attribute name="data-path"><xsl:value-of select="$itemPath"/></xsl:attribute> </xsl:if> <xsl:if test="@ant:nr"> <xsl:attribute name="class">jxb hbm <xsl:if test="@kind = '_dir' and not(@ant:oM)">wdk</xsl:if> <xsl:if test="@ant:jQ"> wdk C</xsl:if> </xsl:attribute> <xsl:attribute name="data-clone"><xsl:value-of select="@ant:nr"/></xsl:attribute> </xsl:if>  <span class="dvx"> <xsl:if test="@kind = '_dir' or substring( @mode, 1, 1 ) = 'd'"> <i class="arrow-right"></i> </xsl:if> <i class="evx"> <xsl:call-template name="icon-kind"/> </i> <xsl:call-template name="get-item-name"> <xsl:with-param name="itemPath" select="substring( $itemPath, 1 )"/> </xsl:call-template>  <xsl:if test="@ant:nr and @kind = '_dir' or @ant:jQ"> <div class="non"><span></span></div> </xsl:if> </span> <span><xsl:call-template name="fileModified"> <xsl:with-param name="delimiter">, </xsl:with-param> </xsl:call-template></span> <span><xsl:call-template name="file-size"> <xsl:with-param name="bytes" select="@size" /> <xsl:with-param name="kind" select="@kind" /> </xsl:call-template></span> <span> <xsl:value-of select="//Mime/*[@id=current()/@kind]/@name"/> <xsl:if test="substring( @mode, 1, 1 ) != 'd'"> file</xsl:if> </span> </div> </xsl:if> </xsl:for-each> </xsl:template>   <xsl:template name="fs-fileView-list-with-wrapper"> <div class="njj"> <xsl:attribute name="data-path"><xsl:call-template name="get-file-path"/></xsl:attribute> <div> <xsl:call-template name="fs-fileView-list"/> </div> </div> </xsl:template>  <xsl:template name="fs-userShared"> <div class="vpc userShared_ right-resize"> <xsl:attribute name="data-kind"><xsl:value-of select="@kind"/></xsl:attribute> <xsl:attribute name="data-path"> <xsl:call-template name="get-file-path"/> </xsl:attribute> <div class="G"> <!-- TODO --> </div> </div> </xsl:template>   <xsl:template name="fs-filePreview"> <xsl:variable name="itemPath"><xsl:call-template name="get-file-path"/></xsl:variable> <div class="vpc nhd right-resize"> <xsl:attribute name="data-kind"><xsl:value-of select="@kind"/></xsl:attribute> <xsl:attribute name="data-path"> <xsl:call-template name="get-file-path"/> </xsl:attribute> <div class="ftq"> <div class="hpb"> <xsl:choose> <xsl:when test="//Mime/*[@id=current()/@kind]/@preview = 'image' or //Mime/*[@id=current()/@kind]/@preview = 'svg'"> <div class="pvp hwm"> <xsl:attribute name="style">background-image: url('/fs<xsl:call-template name="get-file-path"/>?w=232&amp;h=148');</xsl:attribute> </div> </xsl:when> <xsl:when test="//Mime/*[@id=current()/@kind]/@preview = 'text'"> <pre class="pvp uem"> <xsl:attribute name="data-path"><xsl:call-template name="get-file-path"/></xsl:attribute> <xsl:choose> <xsl:when test="//dfs/*[@path = $itemPath]"> <xsl:value-of select="//dfs/*[@path = $itemPath]" disable-output-escaping="yes"/> </xsl:when> <xsl:otherwise> <svg class="tet" viewBox="25 25 50 50" > <circle class="zzq" cx="50" cy="50" r="20" /> </svg> </xsl:otherwise> </xsl:choose> </pre> </xsl:when> <xsl:when test="@kind = 'app'"> <div class="file-app"> <div class="app-icon"> <xsl:attribute name="style">background-image: url(/app/<xsl:value-of select="@ns"/>/icons/app-icon-<xsl:value-of select="@id"/>.png);</xsl:attribute> </div> </div> </xsl:when> <xsl:otherwise> <div class="file-paper"> <div class="tab"></div> <span> <xsl:attribute name="data-kind"><xsl:value-of select="@kind"/></xsl:attribute> <xsl:call-template name="icon-kind"/> </span> </div> </xsl:otherwise> </xsl:choose> </div> <div class="nff"> <div class="gli plp"> <xsl:value-of select="@name"/> <xsl:if test="@kind = 'app'"> <span class="rvg">v<xsl:value-of select="@version"/></span> </xsl:if> </div> <div class="gli"> <var>Kind</var> <span> <xsl:value-of select="//Mime/*[@id=current()/@kind]/@name"/> <xsl:if test="not(//Mime/*[@id=current()/@kind])"><xsl:value-of select="@kind"/></xsl:if> <xsl:if test="@kind != 'app'"> file</xsl:if> </span> </div> <div class="gli"> <var>Size</var> <span><xsl:call-template name="file-size"> <xsl:with-param name="bytes" select="@size" /> </xsl:call-template></span> </div> <!-- <xsl:if test="//Mime/*[@id=current()/@kind]/@preview = 'image'"> <div class="gli"> <var>Dimensions</var> <span>1x1</span> </div> </xsl:if> --> <div class="gli"> <var>Modified</var> <span><xsl:call-template name="fileModified"/></span> </div> </div> </div> </div> </xsl:template>   <xsl:template name="fileModified"> <xsl:param name="delimiter"/> <xsl:value-of select="@mDate"/>&#160;<xsl:value-of select="$delimiter"/>&#160;<span><xsl:value-of select="@mTime"/></span> </xsl:template>   <xsl:template name="icon-type"> <xsl:param name="hiRes"/> <div class="keh"> <xsl:attribute name="style">background-image: url(/app/<xsl:call-template name="select-icon"> <xsl:with-param name="hiRes" select="$hiRes" /> </xsl:call-template>.png);</xsl:attribute> </div> </xsl:template>   <xsl:template name="select-icon"> <xsl:param name="detailed"/> <xsl:param name="hiRes"/> <xsl:variable name="fsView" select="//Settings/Registry/*[@id = 'finder-file-view']/text()"/> <xsl:choose> <xsl:when test="@kind = 'app'"><xsl:value-of select="@ns"/>/icons/app-icon-<xsl:value-of select="@id"/></xsl:when> <xsl:when test="@icon = 'trashcan' and count(./*) &gt; 0">icons/trashcan-full</xsl:when> <xsl:when test="@icon = 'trashcan'">icons/trashcan</xsl:when> <xsl:when test="@kind = 'user'">icons/user-folder</xsl:when> <xsl:when test="@kind = '_dir' and @icon and $fsView = 'icons'">icons/big-<xsl:value-of select="@icon"/></xsl:when> <xsl:when test="@kind = '_dir' and @icon">icons/<xsl:value-of select="@icon"/></xsl:when> <xsl:when test="not($hiRes) and @kind = '_dir' and ($fsView = 'columns' or $fsView = 'list')">icons/tiny-generic-folder</xsl:when> <xsl:when test="@kind = '_dir'">icons/generic-folder</xsl:when> <xsl:when test="$detailed = 1 and @kind = 'html'">icons/file-html</xsl:when> <xsl:when test="$detailed = 1 and @kind = 'htm'">icons/file-html</xsl:when> <xsl:when test="$detailed = 1 and @kind = 'xml'">icons/file-xml</xsl:when> <xsl:when test="$detailed = 1 and @kind = 'png'">icons/file-image</xsl:when> <xsl:when test="$detailed = 1 and @kind = 'jpg'">icons/file-image</xsl:when> <xsl:when test="$detailed = 1 and @kind = 'jpeg'">icons/file-image</xsl:when> <xsl:when test="$detailed = 1 and @kind = 'gif'">icons/file-image</xsl:when> <xsl:when test="$detailed = 1 and @kind = 'js'">icons/file-js</xsl:when> <xsl:when test="$detailed = 1 and @kind = 'json'">icons/file-json</xsl:when> <xsl:when test="$detailed = 1 and @kind = 'pdf'">icons/file-pdf</xsl:when> <xsl:when test="$detailed = 1 and @kind = 'rtf'">icons/file-rtf</xsl:when> <xsl:when test="$detailed = 1 and @kind = 'txt'">icons/file-txt</xsl:when> <xsl:when test="$detailed = 1 and @kind = 'svg'">icons/file-svg</xsl:when> <xsl:when test="$detailed = 1 and @kind = 'man'">icons/file-man</xsl:when> <xsl:when test="$detailed = 1 and @kind = 'xls'">icons/file-xls</xsl:when> <xsl:when test="$detailed = 1 and @kind = 'xlsx'">icons/file-xls</xsl:when> <xsl:when test="$detailed = 1 and @kind = 'zip'">icons/file-zip</xsl:when> <xsl:when test="$detailed = 1 and @kind = 'mp3'">icons/file-mp3</xsl:when> <xsl:when test="$detailed = 1 and @kind = 'mid'">icons/file-mp3</xsl:when> <xsl:when test="$detailed = 1 and @kind = 'md'">icons/file-md</xsl:when> <xsl:when test="$detailed = 1 and @kind = 'y'">icons/file-y</xsl:when> <xsl:when test="not($hiRes) and ($fsView = 'columns' or $fsView = 'list')">icons/tiny-generic-document</xsl:when> <xsl:otherwise>icons/generic-document</xsl:otherwise> </xsl:choose> </xsl:template>   <xsl:template name="icon-kind"> <xsl:param name="hiRes"/> <div class="keh"> <xsl:attribute name="style">background-image: url(/app/<xsl:call-template name="select-icon"> <xsl:with-param name="detailed" select="1" /> <xsl:with-param name="hiRes" select="$hiRes" /> </xsl:call-template>.png);</xsl:attribute> </div> </xsl:template>   <xsl:template name="get-item-name"> <xsl:param name="itemPath" /> <span class="aoz"> <xsl:choose> <xsl:when test="@path = '/fs/'"><xsl:value-of select="//FileSystem/@name"/></xsl:when> <xsl:when test="//FsReserved/*[@path = $itemPath]"><xsl:value-of select="//i18n/i[@name = substring( $itemPath, 2, string-length( $itemPath ) )]/@value"/></xsl:when> <xsl:when test="//FsReserved/*[@path = current()/@path]"><xsl:value-of select="//i18n/i[@name = substring( current()/@path, 2, string-length( current()/@path ) )]/@value"/></xsl:when> <xsl:when test="@name"><xsl:value-of select="@name"/></xsl:when> <xsl:otherwise><xsl:call-template name="substring-after-last"> <xsl:with-param name="string" select="@path" /> <xsl:with-param name="delimiter" select="'/'" /> </xsl:call-template></xsl:otherwise> </xsl:choose> </span> </xsl:template>   <xsl:template name="get-file-path"> <xsl:param name="node" select="."/> <xsl:if test="name($node/..) != 'FileSystem' and name($node) != 'FileSystem'"> <xsl:call-template name="get-file-path"> <xsl:with-param name="node" select="$node/.." /> </xsl:call-template> </xsl:if> <xsl:text>/</xsl:text> <xsl:choose> <xsl:when test="name($node) = 'FileSystem'"></xsl:when> <xsl:otherwise><xsl:value-of select="$node/@name"/></xsl:otherwise> </xsl:choose> </xsl:template>   <xsl:template name="disc-bar"> <xsl:param name="base" select="//FileSystem"/> <xsl:param name="exclude" select="$baseDir/*[@name != 'Mount']"/> <xsl:variable name="disc" select="$base/@disc"/> <div class="disc-bar"> <xsl:for-each select="//MimeGroups/i"> <xsl:variable name="final"> <xsl:call-template name="summerize-mime-groups"> <xsl:with-param name="base" select="$base"/> <xsl:with-param name="exclude" select="$exclude"/> <xsl:with-param name="node" select="./*"/> </xsl:call-template> </xsl:variable> <div> <xsl:attribute name="style"> background: <xsl:value-of select="@color"/>; width: <xsl:value-of select="format-number( $final div $disc, '##0.0%' )"/>; </xsl:attribute> <span><xsl:value-of select="@name"/></span> </div> </xsl:for-each> </div> </xsl:template>   <xsl:template name="summerize-mime-groups"> <xsl:param name="base"/> <xsl:param name="exclude"/> <xsl:param name="node"/> <xsl:param name="accum" select="0"/> <xsl:choose> <xsl:when test="$node"> <xsl:call-template name="summerize-mime-groups"> <xsl:with-param name="node" select="$node[position() > 1 and not(last())]"/> <xsl:with-param name="accum" select="$accum + sum( $exclude//i[@kind = $node/@id]/@size )"/> </xsl:call-template> </xsl:when> <xsl:otherwise> <xsl:value-of select="$accum"/> </xsl:otherwise> </xsl:choose> </xsl:template>   <xsl:template name="hhc"> <xsl:for-each select="./*"> <xsl:if test="name() = 'Menu' and not(@for) or @name"> <xsl:call-template name="hgz"/> </xsl:if> <xsl:if test="name() = 'Group'"> <div class="jya"> <xsl:call-template name="hhc"/> </div> </xsl:if> </xsl:for-each> </xsl:template>  <xsl:template name="jvp"> <xsl:for-each select="./Menu"> <xsl:if test="position() &gt; 1"> <xsl:call-template name="hgz"/> </xsl:if> </xsl:for-each> </xsl:template>  <xsl:template name="hgz"> <div> <xsl:attribute name="data-menu"><xsl:value-of select="@_id"/></xsl:attribute> <xsl:attribute name="class">sus  <xsl:value-of select="@class"/><xsl:text> </xsl:text> <xsl:value-of select="//Settings/Menubar/i[@id = current()/@class]/@value"/> </xsl:attribute> <xsl:choose> <xsl:when test="@icon"> <xsl:choose> <xsl:when test="@icon = 'icon-volume'"> <div class="wri" data-value="3"></div> </xsl:when> <xsl:when test="@icon = 'icon-clock'"> <svg> <xsl:attribute name="class">u</xsl:attribute> <use> <xsl:attribute name="xlink:href">#<xsl:value-of select="@icon"/></xsl:attribute> </use> </svg> <span></span> </xsl:when> <xsl:otherwise> <div class="wri"> <xsl:attribute name="style">background-image: url(/app/icons/<xsl:value-of select="@icon"/>.png);</xsl:attribute> </div> </xsl:otherwise> </xsl:choose> </xsl:when> <xsl:otherwise> <xsl:value-of select="@name"/> </xsl:otherwise> </xsl:choose> </div> </xsl:template>   <xsl:template name="rit"> <div> <xsl:attribute name="data-id"><xsl:value-of select=".//meta[@name='id']/@value"/></xsl:attribute> <xsl:attribute name="data-ns"><xsl:value-of select=".//meta[@name='author']/@namespace"/></xsl:attribute> <xsl:attribute name="data-context"><xsl:value-of select=".//meta[@name='id']/@value"/></xsl:attribute> <xsl:if test="@mode = '998'"> <xsl:attribute name="data-mode"><xsl:value-of select="@mode"/></xsl:attribute> <xsl:attribute name="data-origin"><xsl:value-of select="@origin"/></xsl:attribute> </xsl:if> <xsl:if test=".//meta[@name='resize']/@value = 'disabled'"> <xsl:attribute name="data-resize"><xsl:value-of select=".//meta[@name='resize']/@value"/></xsl:attribute> </xsl:if> <xsl:choose> <xsl:when test=".//meta[@name='fullscreen']/@value = 'true'"> <xsl:attribute name="class">eod cci <xsl:if test=".//meta[@name='headless']"> ioq</xsl:if> <xsl:if test="./Head/ToolBar"> boh</xsl:if> <xsl:if test="./Head/IconBar"> cyq</xsl:if> </xsl:attribute> </xsl:when> <xsl:otherwise> <xsl:attribute name="style"> top: <xsl:value-of select=".//meta[@name='top']/@value"/>px;  <xsl:if test=".//meta[@name='left']"> left: <xsl:value-of select=".//meta[@name='left']/@value"/>px; </xsl:if> <xsl:if test=".//meta[@name='right']"> left: <xsl:value-of select="//details/meta[@name='screen']/@width - .//meta[@name='width']/@value - .//meta[@name='right']/@value"/>px; </xsl:if> </xsl:attribute> <xsl:attribute name="class">eod  <xsl:if test=".//meta[@name='headless']"> ioq <xsl:if test=".//meta[@name='headless']/@theme = 'dark'">led</xsl:if> <xsl:if test=".//meta[@name='headless']/@theme = 'blank'">vgj</xsl:if> </xsl:if> <xsl:if test="./Head/ToolBar"> boh</xsl:if> <xsl:if test="./Head/IconBar"> cyq</xsl:if> <xsl:if test="./Foot"> buk</xsl:if> <xsl:if test="./Head/CaptionToolBar"> fbf</xsl:if> <xsl:if test="./Head/CaptionToolBar/Group/@class = 'empty'"> uud</xsl:if> <xsl:if test="./Head/CaptionToolBar/@has = 'display'"> btp</xsl:if> <xsl:if test="count(./Head/CaptionToolBar/Group) = 1"> btp</xsl:if> </xsl:attribute> </xsl:otherwise> </xsl:choose>  <div class="kql tnh"></div> <div class="kql nxa"></div> <div class="kql rgk"></div> <div class="kql hqy"></div> <div class="kql nba"></div> <div class="kql jif"></div> <div class="kql dvi"></div> <div class="kql qlw"></div>  <div class="blg"> <div class="ytq"> <btn class="amc"> <span class="tki"></span> </btn> <btn> <xsl:attribute name="class">xro <xsl:if test=".//meta[@name='minimize' and @value='disabled']">emi</xsl:if></xsl:attribute> <span class="tki"></span> </btn> <btn> <xsl:attribute name="class">xbq <xsl:if test=".//meta[@name='maximize' and @value='disabled']">emi</xsl:if></xsl:attribute> <span class="tki"></span> </btn> </div> <div class="rgh"> <xsl:if test="not(.//meta[@name='headless'])"> <div class="kti"><xsl:value-of select=".//meta[@name='title']/@value"/></div> <div class="kti tbv">Edited</div> </xsl:if> </div> </div>  <xsl:choose> <xsl:when test="./Head/CaptionToolBar"><xsl:call-template name="rkp"/></xsl:when> <xsl:when test="./Head/ToolBar"><xsl:call-template name="ajx"/></xsl:when> <xsl:when test="./Head/IconBar"><xsl:call-template name="oti"/></xsl:when> </xsl:choose>  <xsl:if test="./Head/TabBar or .//meta[@name='allowTabs']"> <xsl:call-template name="rqs"/> </xsl:if>  <div class="lvy"> <xsl:if test="//details/meta[@name='theme' and @value='dark']"> <xsl:attribute name="data-theme">dark</xsl:attribute> </xsl:if> <xsl:if test="not(.//meta[@name='fullscreen' and @value = 'true'])"> <xsl:attribute name="style"> width: <xsl:value-of select=".//meta[@name='width']/@value"/>px;  height: <xsl:value-of select=".//meta[@name='height']/@value"/>px; </xsl:attribute> </xsl:if> <xsl:value-of select=".//WindowBody" disable-output-escaping="yes"/> </div>  <xsl:if test="./Foot"> <div class="gwu"> <xsl:for-each select="./Foot/*"> <xsl:call-template name="rbb"/> </xsl:for-each> </div> </xsl:if> </div> </xsl:template>  <xsl:template name="oti"> <div class="cid"></div> </xsl:template>  <xsl:template name="rkp"> <div class="ahc" data-area="toolbar"> <xsl:if test="./Head/CaptionToolBar[@has = 'display']"><xsl:attribute name="class">ahc dtx</xsl:attribute></xsl:if> <xsl:for-each select="./Head/CaptionToolBar/*"> <xsl:call-template name="rbb"/> </xsl:for-each> </div> </xsl:template>  <xsl:template name="ajx" data-area="toolbar"> <div class="huj" data-area="toolbar"> <xsl:if test="./Head/ToolBar[@has = 'display']"><xsl:attribute name="class">huj dtx</xsl:attribute></xsl:if> <xsl:for-each select="./Head/ToolBar/*"> <xsl:call-template name="rbb"/> </xsl:for-each> </div> </xsl:template>  <xsl:template name="rbb"> <xsl:choose> <xsl:when test="name() = 'ToolSet'"> <div class="fyq emk"> <xsl:attribute name="data-id"><xsl:value-of select="@id"/></xsl:attribute> <xsl:if test="@state = 'active'"> <xsl:attribute name="class">fyq srv</xsl:attribute> </xsl:if> <xsl:for-each select="./*"> <xsl:call-template name="rbb"/> </xsl:for-each> </div> </xsl:when> <xsl:when test="name() = 'Group'"> <div> <xsl:if test="@width"><xsl:attribute name="style">width: <xsl:value-of select="@width"/>;</xsl:attribute></xsl:if> <xsl:attribute name="class">rmy  <xsl:if test="@align = 'center'">izu </xsl:if> <xsl:value-of select="@class"/> </xsl:attribute> <xsl:for-each select="./*"> <xsl:call-template name="rbb"/> </xsl:for-each> </div> </xsl:when> <xsl:when test="name() = 'Divider'"> <span class="grl"></span> </xsl:when> <xsl:when test="name() = 'Tool'"> <xsl:call-template name="upe"/> </xsl:when> <xsl:when test="name() = 'Select'"> <div class="enp"> <xsl:if test="@state = 'disabled'"><xsl:attribute name="class">enp dng</xsl:attribute></xsl:if> <xsl:attribute name="data-menu"><xsl:value-of select="@menu"/></xsl:attribute> <div class="xxq"> <xsl:if test="@width"><xsl:attribute name="style">width: <xsl:value-of select="@width"/>px;</xsl:attribute></xsl:if> <xsl:value-of select="@name"/> </div> <div class="zvt"></div> </div> </xsl:when> <xsl:when test="name() = 'Options'"> <div class="klb"> <xsl:if test="@type != 'grouped'"> <xsl:attribute name="sys-click">do-toolbar-options</xsl:attribute> </xsl:if> <xsl:attribute name="class">klb <xsl:if test="@type = 'grouped'"> f</xsl:if> <xsl:if test="@class"> <xsl:value-of select="@class"/></xsl:if> </xsl:attribute> <xsl:for-each select="./*"> <xsl:call-template name="upe"/> </xsl:for-each> </div> </xsl:when> <xsl:when test="name() = 'Field'"> <div class="oan"> <xsl:if test="@class"> <xsl:attribute name="class">oan <xsl:value-of select="@class"/></xsl:attribute> </xsl:if> <xsl:copy-of select="./*"/> </div> </xsl:when> <xsl:when test="name() = 'Canvas'"> <canvas class="yme"></canvas> </xsl:when> <xsl:when test="name() = 'Search'"> <div class="jff"> <xsl:if test="@state = 'disabled'"><xsl:attribute name="class">jff jmq</xsl:attribute></xsl:if> <xsl:if test="@width"><xsl:attribute name="style">width: <xsl:value-of select="@width"/>;</xsl:attribute></xsl:if> <input type="text" name="field-search" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false"> <xsl:if test="@state = 'disabled'"><xsl:attribute name="disabled">disabled</xsl:attribute></xsl:if> <xsl:if test="@placeholder"><xsl:attribute name="placeholder"><xsl:value-of select="@placeholder"/></xsl:attribute></xsl:if> </input> <div class="wky lab"></div> <div class="wky hci"></div> </div> </xsl:when> <xsl:when test="name() = 'Text'"> <span> <xsl:if test="@class"><xsl:attribute name="class"><xsl:value-of select="@class"/></xsl:attribute></xsl:if> <xsl:value-of select="." disable-output-escaping="yes"/> </span> </xsl:when> <xsl:when test="name() = 'Icon'"> <span> <xsl:attribute name="class">zjb <xsl:value-of select="@symbol"/></xsl:attribute> <xsl:attribute name="style">background-image: url(/app/<xsl:value-of select="ancestor::Application//meta[@name='author']/@namespace"/>/<xsl:value-of select="ancestor::Application//meta[@name='id']/@value"/>/icons/<xsl:value-of select="@symbol"/>.png)</xsl:attribute> <xsl:if test="@class"><xsl:attribute name="class"><xsl:value-of select="@class"/></xsl:attribute></xsl:if> </span> </xsl:when> <xsl:when test="name() = 'Slider'"> <input type="range"> <xsl:attribute name="id"><xsl:value-of select="@id"/></xsl:attribute> <xsl:attribute name="class"><xsl:value-of select="@class"/></xsl:attribute> <xsl:attribute name="name"><xsl:value-of select="@name"/></xsl:attribute> <xsl:attribute name="value"><xsl:value-of select="@value"/></xsl:attribute> <xsl:attribute name="min"><xsl:value-of select="@min"/></xsl:attribute> <xsl:attribute name="max"><xsl:value-of select="@max"/></xsl:attribute> <xsl:attribute name="step"><xsl:value-of select="@step"/></xsl:attribute> <xsl:if test="@change"> <xsl:attribute name="data-change"><xsl:value-of select="@change"/></xsl:attribute> </xsl:if> </input> </xsl:when> </xsl:choose> </xsl:template>  <xsl:template name="upe"> <div> <xsl:if test="@title"><xsl:attribute name="title"><xsl:value-of select="@title"/></xsl:attribute></xsl:if> <xsl:attribute name="class">ywe  <xsl:choose> <xsl:when test="@state = 'active'">rez </xsl:when> <xsl:when test="@state = 'disabled'">dng </xsl:when> </xsl:choose> <xsl:if test="@menu"> zhd </xsl:if> <xsl:if test="not(@symbol)"> yex </xsl:if> <xsl:value-of select="@class"/> </xsl:attribute> <xsl:if test="@menu"> <xsl:attribute name="data-menu"> <xsl:value-of select="@menu"/> </xsl:attribute> <div class="zvt"></div> </xsl:if> <xsl:if test="@click"> <xsl:attribute name="data-click"><xsl:value-of select="@click"/></xsl:attribute> </xsl:if> <xsl:if test="@arg"> <xsl:attribute name="data-arg"><xsl:value-of select="@arg"/></xsl:attribute> </xsl:if> <xsl:if test="@name"><xsl:value-of select="@name"/></xsl:if>  <xsl:if test="@symbol"> <span> <xsl:attribute name="class">hsy <xsl:value-of select="@symbol"/></xsl:attribute> <xsl:attribute name="style">background-image: url(/app/<xsl:value-of select="ancestor::Application//meta[@name='author']/@namespace"/>/<xsl:value-of select="ancestor::Application//meta[@name='id']/@value"/>/icons/<xsl:value-of select="@symbol"/>.png)</xsl:attribute> </span> </xsl:if> </div> </xsl:template>  <xsl:template name="rqs"> <div class="tgw" sys-click="do-win-tabs"> <xsl:if test="count(./Head/TabBar/*) &lt; 2"> <xsl:attribute name="class">tgw pea</xsl:attribute> </xsl:if>  <div class="kjc"> <div class="zrv" sys-click="remove-win-tab"></div> <span></span> </div>  <div class="umv" sys-click="add-win-tab" sys-tab-name="New document"></div> </div> </xsl:template>    <xsl:template name="dcj"> <xsl:variable name="spawnId"> <xsl:value-of select="ancestor::Application//meta[@name='id']/@value"/>-<xsl:value-of select="@id"/> </xsl:variable> <div> <xsl:attribute name="data-id"><xsl:value-of select="$spawnId"/></xsl:attribute> <xsl:attribute name="data-context"><xsl:value-of select="$spawnId"/></xsl:attribute> <xsl:attribute name="data-ns"><xsl:value-of select="ancestor::Application//meta[@name='author']/@namespace"/></xsl:attribute> <xsl:attribute name="data-spawn"><xsl:value-of select="ancestor::Application//meta[@name='id']/@value"/></xsl:attribute> <xsl:attribute name="data-sId"><xsl:value-of select="@sId"/></xsl:attribute> <xsl:if test=".//meta[@name='resize']/@value = 'disabled'"> <xsl:attribute name="data-resize"><xsl:value-of select=".//meta[@name='resize']/@value"/></xsl:attribute> </xsl:if> <xsl:attribute name="style"> <!-- z-index: 101;  --> top: <xsl:value-of select=".//meta[@name='top']/@value"/>px;  <xsl:if test=".//meta[@name='left']"> left: <xsl:value-of select=".//meta[@name='left']/@value"/>px; </xsl:if> <xsl:if test=".//meta[@name='right']"> left: <xsl:value-of select="//details/meta[@name='screen']/@width - .//meta[@name='width']/@value - .//meta[@name='right']/@value"/>px; </xsl:if> </xsl:attribute> <xsl:attribute name="class">eod vmi  <xsl:if test=".//meta[@name='headless']"> ioq <xsl:if test=".//meta[@name='headless']/@theme = 'dark'">led</xsl:if> <xsl:if test=".//meta[@name='headless']/@theme = 'blank'">vgj</xsl:if> </xsl:if> <xsl:if test="./Head/ToolBar"> boh</xsl:if> <xsl:if test="./Head/IconBar"> cyq</xsl:if> <xsl:if test="./Foot"> buk</xsl:if> <xsl:if test="./Head/CaptionToolBar"> fbf</xsl:if> <xsl:if test="./Head/CaptionToolBar/Group/@class = 'empty'"> uud</xsl:if> <xsl:if test="./Head/CaptionToolBar/@has = 'display'"> btp</xsl:if> <xsl:if test="count(./Head/CaptionToolBar/Group) = 1"> btp</xsl:if> </xsl:attribute>  <div class="kql tnh"></div> <div class="kql nxa"></div> <div class="kql rgk"></div> <div class="kql hqy"></div> <div class="kql nba"></div> <div class="kql jif"></div> <div class="kql dvi"></div> <div class="kql qlw"></div>  <div class="blg"> <div class="ytq"> <btn class="amc"> <span class="tki"></span> </btn> <btn> <xsl:attribute name="class">xro <xsl:if test=".//meta[@name='minimize' and @value='disabled']">emi</xsl:if></xsl:attribute> <span class="tki"></span> </btn> <btn> <xsl:attribute name="class">xbq <xsl:if test=".//meta[@name='maximize' and @value='disabled']">emi</xsl:if></xsl:attribute> <span class="tki"></span> </btn> </div> <div class="rgh"> <xsl:if test="not(.//meta[@name='headless'])"> <div class="kti"><xsl:value-of select=".//meta[@name='title']/@value"/></div> <div class="kti tbv">Edited</div> </xsl:if> </div> </div>  <xsl:choose> <xsl:when test="./Head/CaptionToolBar"><xsl:call-template name="rkp"/></xsl:when> <xsl:when test="./Head/ToolBar"><xsl:call-template name="ajx"/></xsl:when> <xsl:when test="./Head/IconBar"><xsl:call-template name="oti"/></xsl:when> </xsl:choose>  <xsl:if test="./Head/TabBar or .//meta[@name='allowTabs']"> <xsl:call-template name="rqs"/> </xsl:if>  <div class="lvy"> <xsl:if test="//details/meta[@name='theme' and @value='dark']"> <xsl:attribute name="data-theme">dark</xsl:attribute> </xsl:if> <xsl:if test="not(.//meta[@name='fullscreen' and @value = 'true'])"> <xsl:attribute name="style"> width: <xsl:value-of select=".//meta[@name='width']/@value"/>px;  height: <xsl:value-of select=".//meta[@name='height']/@value"/>px; </xsl:attribute> </xsl:if> <xsl:value-of select=".//SpawnBody" disable-output-escaping="yes"/> </div>  <xsl:if test="./Foot"> <div class="gwu"> <xsl:for-each select="./Foot/*"> <xsl:call-template name="rbb"/> </xsl:for-each> </div> </xsl:if> </div> </xsl:template>  <xsl:template name="ohc"> <div class="ksw" data-name="alert"> <div class="wvu"> <div class="vdj"> <span class="xum"> <xsl:attribute name="style"> --app-icon: url(/app/<xsl:value-of select="@ns"/>/icons/app-icon-<xsl:value-of select="@app"/>.png); </xsl:attribute> </span> <xsl:value-of select="text()"/> </div> <div class="tlo"> <button sys-click="dialog-alert-ok" class="primary"><xsl:choose> <xsl:when test="@btnOkText"><xsl:value-of select="@btnOkText"/></xsl:when> <xsl:otherwise>Ok</xsl:otherwise> </xsl:choose></button> </div> </div> </div> </xsl:template>   <xsl:template name="hcd"> <div class="ksw" data-name="confirm"> <div class="wvu"> <div class="vdj"> <span class="xum"> <xsl:attribute name="style"> --app-icon: url(/app/<xsl:value-of select="@ns"/>/icons/app-icon-<xsl:value-of select="@app"/>.png); </xsl:attribute> </span> <xsl:value-of select="text()"/> </div> <div class="tlo"> <button sys-click="dialog-confirm-cancel"><xsl:choose> <xsl:when test="@btnCancelText"><xsl:value-of select="@btnCancelText"/></xsl:when> <xsl:otherwise>Cancel</xsl:otherwise> </xsl:choose></button> <button sys-click="dialog-confirm-ok" class="primary"><xsl:choose> <xsl:when test="@btnOkText"><xsl:value-of select="@btnOkText"/></xsl:when> <xsl:otherwise>Ok</xsl:otherwise> </xsl:choose></button> </div> </div> </div> </xsl:template>   <xsl:template name="bnh"> <div class="ksw rej"> <div class="ieu">  <div class="jrp"> <div class="rff woy"> <div> <selectbox class="fs-folder-select" sys-change="folder-select-change"></selectbox> </div> </div> <div class="uak"> <div class="rmy"> <div class="ywe dng" sys-click="dialog-files-prev"> <span class="hsy icon-left"></span> </div> <div class="ywe dng" sys-click="dialog-files-next"> <span class="hsy icon-right"></span> </div> </div> <div class="rmy"> <div class="ywe" sys-click="dialog-fileview-change" data-arg="icons"> <span class="hsy view-icons"></span> </div> <div class="ywe" sys-click="dialog-fileview-change" data-arg="list"> <span class="hsy view-list"></span> </div> <div class="ywe" sys-click="dialog-fileview-change" data-arg="columns"> <span class="hsy view-columns"></span> </div> </div> <div class="dmj"> <div class="jff"> <input type="text" name="field-search" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" placeholder="Search" /> <div class="wky"></div> </div> </div> </div> </div>  <div class="rff skl"> <div class="tcy"> <xsl:call-template name="fs-dialog-sideBar"> <xsl:with-param name="viewPath"> <xsl:call-template name="get-file-path"/> </xsl:with-param> </xsl:call-template> </div> <div class="aig"> <div> <xsl:attribute name="style">--icon-size: <xsl:value-of select="//Settings/Registry/*[@id='finder-icon-size']/text()"/>px;</xsl:attribute> <xsl:attribute name="class"><xsl:call-template name="wox"/></xsl:attribute>  <!-- <xsl:if test="//Settings/Registry/*[@id = 'fs-dialog-style' and text() = 'expanded']"> --> <xsl:call-template name="fs-fileView"> <xsl:with-param name="fsRegId" select="'fs-dialog-file-view'" /> </xsl:call-template> <!-- </xsl:if> --> </div> </div> </div>  <div class="ibs"></div>  <div class="rff cac"> <button sys-click="open-dialog-close">Cancel</button> <button sys-click="open-dialog-open" disabled="disabled">Open</button> </div> </div> </div> </xsl:template>   <xsl:template name="trz"> <div class="ksw mdk"> <xsl:if test="//Settings/Registry/*[@id = 'fs-dialog-style' and text() = 'expanded']"> <xsl:attribute name="class">ksw mdk kne</xsl:attribute> </xsl:if> <div class="orf"> <div class="rff"> <legend>Save As:</legend> <div class="oee"> <span> <xsl:attribute name="data-kind"><xsl:value-of select="//dfs/i/@kind"/></xsl:attribute> <xsl:value-of select="//dfs/i/@name"/> </span> <input type="text" name="filename" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false"> <xsl:attribute name="value"><xsl:value-of select="//dfs/i/@name"/></xsl:attribute> </input> </div> </div>  <div class="ibs bzv"></div>  <div class="jrp"> <div class="rff oub"> <legend>Where:</legend> <div> <selectbox class="fs-folder-select" sys-change="folder-select-change"></selectbox> </div> <button class="zvl" sys-click="save-dialog-toggle"></button> </div> <div class="uak"> <div class="rmy"> <div class="ywe dng" sys-click="dialog-files-prev"> <span class="hsy icon-left"></span> </div> <div class="ywe dng" sys-click="dialog-files-next"> <span class="hsy icon-right"></span> </div> </div> <div class="rmy"> <div class="ywe" sys-click="dialog-fileview-change" data-arg="icons"> <span class="hsy view-icons"></span> </div> <div class="ywe" sys-click="dialog-fileview-change" data-arg="list"> <span class="hsy view-list"></span> </div> <div class="ywe" sys-click="dialog-fileview-change" data-arg="columns"> <span class="hsy view-columns"></span> </div> </div> <div class="dmj"> <div class="jff"> <input type="text" name="field-search" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" placeholder="Search" /> <div class="wky"></div> </div> </div> </div> </div>  <div class="rff skl"> <div class="tcy"> <xsl:call-template name="fs-dialog-sideBar"> <xsl:with-param name="viewPath"> <xsl:call-template name="get-file-path"/> </xsl:with-param> </xsl:call-template> </div> <div class="aig"> <div> <xsl:attribute name="style">--icon-size: <xsl:value-of select="//Settings/Registry/*[@id='finder-icon-size']/text()"/>px;</xsl:attribute> <xsl:attribute name="class"><xsl:call-template name="wox"/></xsl:attribute>  <xsl:if test="//Settings/Registry/*[@id = 'fs-dialog-style' and text() = 'expanded']"> <xsl:call-template name="fs-fileView"> <xsl:with-param name="fsRegId" select="'fs-dialog-file-view'" /> </xsl:call-template> </xsl:if> </div> </div> </div>  <div class="ibs"></div>  <div class="rff"> <legend>Format:</legend> <div> <selectbox class="r" sys-change="dialog-select-file-format"> <xsl:for-each select="//dfs/i/*"> <div class="prefix-icon"> <xsl:attribute name="value"><xsl:value-of select="@type"/></xsl:attribute> <xsl:if test="@type = ../@kind"><xsl:attribute name="selected">true</xsl:attribute></xsl:if> <span><xsl:value-of select="//Mime/*[@id = current()/@type]/@name"/> file</span> </div> </xsl:for-each> </selectbox> </div> </div>  <div class="ibs"></div>  <div class="rff cac"> <button sys-click="save-dialog-new-folder" class="left">New Folder</button> <button sys-click="save-dialog-close">Cancel</button> <button sys-click="save-dialog-save">Save</button> </div> </div> </div> </xsl:template>   <xsl:template name="wox"> <xsl:choose> <xsl:when test="//Settings/Registry/*[@id = 'fs-dialog-file-view' and text() = 'icons']">rdg</xsl:when> <xsl:when test="//Settings/Registry/*[@id = 'fs-dialog-file-view' and text() = 'list']">wfy</xsl:when> <xsl:otherwise>vaf</xsl:otherwise> </xsl:choose> </xsl:template>   <xsl:template name="populate-fs-selectbox"> <xsl:param name="node" select="."/> <xsl:param name="unselect"/> <xsl:if test="name($node) != 'FileSystem'"> <xsl:call-template name="populate-fs-selectbox"> <xsl:with-param name="node" select="$node/.." /> <xsl:with-param name="unselect" select="1" /> </xsl:call-template> </xsl:if> <div class="prefix-icon"> <xsl:if test="$unselect != 1"><xsl:attribute name="selected">true</xsl:attribute></xsl:if> <xsl:attribute name="value"><xsl:call-template name="get-file-path"> <xsl:with-param name="node" select="$node" /> </xsl:call-template></xsl:attribute> <xsl:attribute name="style">--icon-prefix: url(/app/icons/<xsl:choose> <xsl:when test="$node/@icon"><xsl:value-of select="$node/@icon"/></xsl:when> <xsl:otherwise>generic-folder</xsl:otherwise> </xsl:choose>.png);</xsl:attribute> <span><xsl:value-of select="$node/@name"/></span> </div> </xsl:template>   <xsl:template name="ncz"> <div> <xsl:attribute name="class">bxm  <xsl:if test="@type = 'thin'">ron</xsl:if> <xsl:if test="@for = 'winmax'">imx</xsl:if> </xsl:attribute> <div class="dvk"> <xsl:for-each select="./*"> <xsl:choose> <xsl:when test="@type='hidden'"></xsl:when> <xsl:when test="@type='divider'"> <xsl:if test="position() != last()"><div class="wat"></div></xsl:if> </xsl:when> <xsl:when test="@type='caption'"> <div class="tzp"><xsl:value-of select="@name"/></div> </xsl:when> <xsl:when test="@type='screen'"> <div class="oxi"> <xsl:if test="@class"><xsl:attribute name="class">oxi <xsl:value-of select="@class"/></xsl:attribute></xsl:if> <xsl:for-each select="./*"> <xsl:if test="@type = 'view'"><div class="zlw"> <xsl:attribute name="_id"><xsl:value-of select="@_id"/></xsl:attribute> </div></xsl:if> <xsl:if test="@type = 'column'"><div class="vpc"> <xsl:for-each select="./*"> <div class="zlw"> <xsl:attribute name="_id"><xsl:value-of select="@_id"/></xsl:attribute> </div> </xsl:for-each> </div></xsl:if> </xsl:for-each> </div> </xsl:when> <xsl:when test="@type='slider'"> <div class="mkz"> <input type="range"> <xsl:attribute name="_id"><xsl:value-of select="@_id"/></xsl:attribute> <xsl:attribute name="value"><xsl:value-of select="@value"/></xsl:attribute> <xsl:attribute name="min"><xsl:value-of select="@min"/></xsl:attribute> <xsl:attribute name="max"><xsl:value-of select="@max"/></xsl:attribute> <xsl:attribute name="step"><xsl:value-of select="@step"/></xsl:attribute> </input> </div> </xsl:when> <xsl:when test="@type='input'"> <xsl:if test="@caption"><div class="tzp"><xsl:value-of select="@caption"/></div></xsl:if> <div class="ktj"> <input type="text"> <xsl:attribute name="_id"><xsl:value-of select="@_id"/></xsl:attribute> <xsl:attribute name="placeholder"><xsl:value-of select="@placeholder"/></xsl:attribute> </input> </div> </xsl:when> <xsl:when test="@type='colors'"> <xsl:if test="@caption"><div class="tzp"><xsl:value-of select="@caption"/></div></xsl:if> <div class="yuz"> <xsl:attribute name="_id"><xsl:value-of select="@_id"/></xsl:attribute> <xsl:if test="@break"> <xsl:attribute name="style">--break: <xsl:value-of select="@break"/>;</xsl:attribute> </xsl:if> <xsl:for-each select="./Color"> <xsl:choose> <xsl:when test="@type='hidden'"></xsl:when> <xsl:otherwise> <div> <xsl:attribute name="style">background: <xsl:value-of select="@arg"/>;</xsl:attribute> <xsl:attribute name="class">clq <xsl:if test="@active = 1">oxc</xsl:if> </xsl:attribute> <xsl:attribute name="data-arg"><xsl:value-of select="@arg"/></xsl:attribute> </div> </xsl:otherwise> </xsl:choose> </xsl:for-each> </div> </xsl:when> <xsl:when test="@type='icon'"> <div> <xsl:attribute name="_id"><xsl:value-of select="@_id"/></xsl:attribute> <xsl:attribute name="class">kxf gwi <xsl:if test="@is-checked = '1'"> bpu</xsl:if> </xsl:attribute> <xsl:if test="@is-checked = '1'"> <span class="oir"></span> </xsl:if> <i> <xsl:attribute name="style">background-image: url(<xsl:value-of select="@name"/>);</xsl:attribute> </i> </div> </xsl:when> <xsl:when test="@show-if-group and @is and ancestor::Application//Menu[@check-group = current()/@show-if-group and @arg = current()/@is and not(@is-checked)]"> <!-- skip menu item if condition in not met --> </xsl:when> <xsl:otherwise> <div> <xsl:attribute name="_id"><xsl:value-of select="@_id"/></xsl:attribute> <xsl:attribute name="class">kxf <xsl:if test="count(./*) &gt; 0 or @invoke"> cuy</xsl:if> <xsl:if test="@is-checked = '1'"> bpu</xsl:if> <xsl:if test="@filter"> im</xsl:if> <xsl:if test="@disabled"> sag</xsl:if> <xsl:if test="@disable-if and @is and ancestor::Application//Menu[@check-group = current()/@disable-if and @arg = current()/@is and @is-checked = '1']"> sag</xsl:if> </xsl:attribute><xsl:value-of select="@name"/> <xsl:if test="@status = 'online'"> <span class="mmh"></span> </xsl:if> <xsl:if test="@status = 'offline'"> <span class="gom"></span> </xsl:if> <xsl:if test="@is-checked = '1' or @filter"> <span class="oir"></span> </xsl:if> <xsl:if test="count(./*) &gt; 0 or @invoke"> <span class="sfh"></span> </xsl:if> <xsl:if test="count(./*) = 0 and @hotkey"> <span class="xck"><xsl:call-template name="dyn"> <xsl:with-param name="char" select="@hotkey"/> </xsl:call-template></span> </xsl:if> </div> </xsl:otherwise> </xsl:choose> </xsl:for-each> </div> </div> </xsl:template>  <xsl:template name="dyn"> <xsl:param name="char" select="."/> <xsl:if test="string-length($char)"> <xsl:choose> <xsl:when test="substring-before(concat($char, '+'), '+') = 'tab'">⇥</xsl:when> <xsl:when test="substring-before(concat($char, '+'), '+') = 'meta'">⌘</xsl:when> <xsl:when test="substring-before(concat($char, '+'), '+') = 'alt'">⌥</xsl:when> <xsl:when test="substring-before(concat($char, '+'), '+') = 'control'">⌃</xsl:when> <xsl:when test="substring-before(concat($char, '+'), '+') = 'shift'">⇧</xsl:when> <xsl:when test="substring-before(concat($char, '+'), '+') = 'esc'">⎋</xsl:when> <xsl:when test="substring-before(concat($char, '+'), '+') = 'backspace'">⌫</xsl:when> <xsl:when test="substring-before(concat($char, '+'), '+') = 'delete'">⌦</xsl:when> <xsl:when test="substring-before(concat($char, '+'), '+') = 'up'">↑</xsl:when> <xsl:when test="substring-before(concat($char, '+'), '+') = 'down'">↓</xsl:when> <xsl:when test="substring-before(concat($char, '+'), '+') = 'left'">←</xsl:when> <xsl:when test="substring-before(concat($char, '+'), '+') = 'right'">→</xsl:when> <xsl:when test="substring-before(concat($char, '+'), '+') = ' '">Space</xsl:when> <xsl:when test="string-length(@hotkey) = 1"> <xsl:value-of select="translate(@hotkey, $lowercase, $uppercase)"/> </xsl:when> </xsl:choose> <xsl:call-template name="dyn"> <xsl:with-param name="char" select="substring-after($char, '+')"/> </xsl:call-template> <xsl:if test="string-length(substring-after($char, '+')) = 1"> <xsl:value-of select="translate(substring-after($char, '+'), $lowercase, $uppercase)"/> </xsl:if> </xsl:if> </xsl:template>   </xsl:stylesheet></ledger>
